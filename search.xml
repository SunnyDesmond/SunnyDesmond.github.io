<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[uni-app permission 添加失败解决方案]]></title>
    <url>%2Funi-app-permission-%E6%B7%BB%E5%8A%A0%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html</url>
    <content type="text"><![CDATA[踩坑微信小程序现在需要手动在 app.json中设置premission才可以授权获取位置信息。 123456789&quot;permission&quot;: &#123; &quot;scope.userLocation&quot;: &#123; &quot;desc&quot;: &quot;你的位置信息将用于小程序位置接口的效果展示&quot; &#125; &#125; 在uni-app中发现在app.json中设置无效，经研究发现必须要在uni-app项目中mainfest.json中设置才行。 1234567891011121314&quot;mp-weixin&quot; : &#123; &quot;appid&quot; : &quot;xxxxxxxxxxx&quot;, &quot;setting&quot; : &#123; &quot;urlCheck&quot; : false, &quot;minified&quot; : true, &quot;es6&quot; : true, &quot;postcss&quot; : true &#125;, &quot;permission&quot; : &#123; &quot;scope.userLocation&quot;: &#123; &quot;desc&quot;: &quot;你的位置信息将用于小程序位置接口的效果展示&quot; &#125; &#125; &#125;, 记录。]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[离职杂记]]></title>
    <url>%2F%E7%A6%BB%E8%81%8C%E6%9D%82%E8%AE%B0.html</url>
    <content type="text"><![CDATA[离开果酱做梦都没有想到，加入果酱仅仅10个月不到，我就离开了这个「大家庭」。在加入果酱之前，其实对果酱充满了期待，被跳脱的办公环境以及公司的业务方向冲昏了头脑，不顾老婆的反对，毅然决然的加入了。果酱的流程还是偏正规化，有种大厂既视感。新人会需要准备新人串讲PPT，研发的话，还需要额外准备一份代码串讲ppt。试用期过后还需要准备转正申请。离职的因素真的太多了，但这边也不好说太多，只能说管理过于混乱（有些管理者真的恶心！！！），排期无章（临时加班等等）以及离家过远（其实也还好，一小时多一点的路程）。如果你有幸能看到这篇文章，而你恰巧又有想去果酱的冲动。作为过来人奉劝各位一句，『请慎重』。 面试心酸路程2019年炎热的7月，我终于离开了果酱，踏上了面试之路。其实在还未办完手续之前也有陆陆续续的参加了几个面试。然而都是无疾而终。这几个面试中还要几个相对来说比较知名的企业，如趋势科技、焦点科技等。他们的面试官态度还行，但是问的都是一些非常跳跃的问题，甚至说是根本不是做前端的。这让我非常的郁闷。当时还有同事跟我说，今年工作不是很好找。那时候我信了。👿果酱的排期非常之多，非常密集。而且人手不足，因此很难请出假来参加面试。因此一直开始到7月末（7.19周五离职）才开始正式找工作。由于被创业公司坑怕了。因此投简历的时候非常谨慎，每个企业都会在「看准」上看一下评价。而且当时还想找个尽量离家近的，省的在路上来回折腾，所以有好多看着不错，但是太远的，就没考虑。19年7月的南京真的是热疯了。顶着37、8度的高温满大街的跑。有最多的一天安排了5场面试，真的热skr人。今年的面试不论大小厂，都有一个很奇怪的感觉。以为他们几乎很少问到技术，很多面试官不是前端，甚至不是技术，这真的让人奔溃。面试了往往20分钟左右，就让走了。mmp，大老远的顶着大太阳，面试者容易吗？😡完全不考虑求职者的感受，既然不是诚心招人，那就不要约面试！在复试创维的时候，还遇到一个哥们，也是来复试的。互加了微信了解到，他面试过的公司也都是这样，真的很无奈。话说创维的复试的也是很坑，初试的好好地，结果复试的时候来个所谓的经理。毛都不懂，上来来一个自我介绍，然后问了一些鸡毛蒜皮的事，就让回去了。前后3分钟。。。这么敷衍还不如打电话，或者干脆不约，真的很辣鸡😡后来又面了几家，终于参悟到一个道理，可能是薪水要高了。。。。想想每个月的房贷，生活开支，真的不得不向生活低头。因此自降薪资，再次征战。终于顺利拿到了一个房地产公司的offer。（主要这公司离家非常近，😝😝） 结束语至此面试的经历暂告一段落，虽心有不甘，但这就是现实。最后裸辞有风险，真的不要再尝试了。尤其是有房贷的那些哥们。技术大佬或土豪请无视。嗯，立足当下，好好做好工作，继续努力吧。🤗🤗]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决mac版本sourceTree卡顿问题]]></title>
    <url>%2F%E8%A7%A3%E5%86%B3mac%E7%89%88%E6%9C%ACsourceTree%E5%8D%A1%E9%A1%BF%E9%97%AE%E9%A2%98.html</url>
    <content type="text"><![CDATA[mac下的SourceTree，蛮好用的，但是最近发现，打开超级卡，切换分支的时候跟食s了一样，最后发现这样解决其实就好多了。 话不多说，直接上图。 亲测有效，如果有更好的方法，欢迎留言沟通~]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序设置全局弹窗]]></title>
    <url>%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E5%BC%B9%E7%AA%97.html</url>
    <content type="text"><![CDATA[废话前段时间太忙了，然后又太懒，导致好久没有更新，实在是惭愧啊。。。 需求最近做了一个小程序中的一个需求。大概是这样的：需要做一个全局弹窗。然后在小程序运行期间只打开一次，只有关闭微信的时候再打开小程序才弹出来这个弹窗，否则都只展示一次，哪怕是点小程序右上角将小程序隐藏进后台，也展示一次。本来把这个需求想的有些麻烦，一开始想给这个全局弹窗弄个变量，存到localStorge里面，然后每次打开app的时候，读取这个变量。卸载app后清除这个变量。但是后来发现，小程序的onUnload和onHide都不能监听到app的卸载。最后在小伙伴的提示下，发现只要给这个变量赋值到aap.js中就行了，然后运行完这个弹窗就将这个全局变量置为false即可。。。 代码123456app.js·········onLaunch: function (options) &#123; this.globalData.needShowLaunchAd = true; &#125;,······· 123456const App = getApp();········ if (App.globalData.needShowLaunchAd)&#123; App.globalData.needShowLaunchAd=false; &#125;······· 官方概念 ###小程序启动小程序启动会有两种情况，一种是「冷启动」，一种是「热启动」。热启动：假如用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时无需重新启动，只需将后台态的小程序切换到前台，这个过程就是热启动；冷启动：用户首次打开或小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动，即冷启动。小程序没有重启的概念。 ##小程序销毁需要注意的是：只有当小程序进入后台一定时间，或者系统资源占用过高，才会被真正的销毁。当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后（目前是5分钟）小程序会被微信主动销毁。当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。在 iOS 上，当微信客户端在一定时间间隔内（目前是 5 秒）连续收到两次及以上系统内存告警时，会主动进行小程序的销毁，并提示用户 「该小程序可能导致微信响应变慢被终止」。建议小程序在必要时使用 wx.onMemoryWarning 监听内存告警事件，进行必要的内存清理。 即，只有在冷启动的时候，app.js中的变量才会开始初始赋值，否者会一直存在，通过此特性，我们就可以轻松做到一开始提到的需求啦。]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于pick-view时间组件]]></title>
    <url>%2F%E5%9F%BA%E4%BA%8Epick-view%E6%97%B6%E9%97%B4%E7%BB%84%E4%BB%B6.html</url>
    <content type="text"><![CDATA[做一个时间选择器最近需要做一个小程序项目的时候，遇到一个需要将时间选择器暴露在页面的需求。如图： pick view微信小程序提供了一些非常常见的pick组件，但是直接暴露在页面上的，只有pick view组件。因此这边只能使用这个了。😂 不上台面的代码片段由于项目比较急，没有时间做优化，因此直接开搞。这边贴上代码。🤒😈😈⚠️警告： 目前picker-view不支持给选中的column改变字体颜色，因此无法高亮选中的picker-view-column哪怕设置indicator-style或者给加上indicator-class都不好用！但是可以给indicator-style添加背景色，就像这样 indicator-style=&quot;background:#ff4400;&quot;。😂😂但是。。真的很丑😫😫😫😫 view 代码1234567891011121314151617&lt;picker-view indicator-style=&quot;height: 45px;&quot; indicator-class=&quot;indicator&quot; bindchange=&quot;bindChange&quot; value=&apos;&#123;&#123;defaultDate&#125;&#125;&apos;&gt; &lt;picker-view-column&gt; &lt;view class=&apos;year&apos; wx:for=&quot;&#123;&#123;years&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/picker-view-column&gt; &lt;picker-view-column&gt; &lt;view class=&apos;month&apos; wx:for=&quot;&#123;&#123;months&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/picker-view-column&gt; &lt;picker-view-column&gt; &lt;view class=&apos;day&apos; wx:for=&quot;&#123;&#123;days&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/picker-view-column&gt; &lt;picker-view-column&gt; &lt;view class=&apos;hour&apos; wx:for=&quot;&#123;&#123;hours&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/picker-view-column&gt; &lt;picker-view-column&gt; &lt;view class=&apos;min&apos; wx:for=&quot;&#123;&#123;mins&#125;&#125;&quot; wx:key=&quot;&#123;&#123;index&#125;&#125;&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/view&gt; &lt;/picker-view-column&gt; &lt;/picker-view&gt; 公共js代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192Array.prototype.indexVf = function(arr) &#123; for (var i = 0; i &lt; this.length; i++) &#123; if (this[i] == arr) &#123; return i; &#125; &#125; &#125;let years = []let months = []let days = []let hours = []let mins = []let date = new Date();// 格式化数字function formatNum(val) &#123; let formatVal; if (val &lt; 10) &#123; formatVal = `0$&#123;val&#125;` &#125; else &#123; formatVal = val; &#125; return formatVal;&#125;// 初始化当前时间function initYear() &#123; let date = new Date(); // 此处清空数组，防止数据污染 years = []; months = []; days = []; hours = []; mins = []; for (let i = date.getFullYear(); i &lt;= date.getFullYear() + 5; i++) &#123; years.push(i) &#125; for (let i = date.getMonth() + 1; i &lt;= 12; i++) &#123; months.push(formatNum(i)); &#125; // 根据月份 获取当前月的天数 let countDays = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(); for (let i = date.getDate(); i &lt;= countDays; i++) &#123; days.push(formatNum(i)); &#125; for (let i = date.getHours(); i &lt;= 23; i++) &#123; hours.push(formatNum(i)); &#125; for (let i = date.getMinutes(); i &lt;= 59; i++) &#123; mins.push(formatNum(i)) &#125;&#125;// 初始化 所有时间function initAllYear(yy, mm) &#123; // 此处清空数组，防止数据污染 years = []; months = []; days = []; hours = []; mins = []; for (let i = date.getFullYear(); i &lt;= date.getFullYear() + 5; i++) &#123; years.push(i) &#125; for (let i = 1; i &lt;= 12; i++) &#123; months.push(formatNum(i)); &#125; // 根据月份 获取当前月的天数 let countDays = new Date(yy, mm, 0).getDate(); for (let i = 1; i &lt;= countDays; i++) &#123; days.push(formatNum(i)); &#125; for (let i = 0; i &lt;= 23; i++) &#123; hours.push(formatNum(i)); &#125; for (let i = 0; i &lt;= 59; i++) &#123; mins.push(formatNum(i)) &#125;&#125; 页面jspage(&#123; data: &#123; years, year: &quot;&quot;, months, month: &quot;&quot;, days, day: &quot;&quot;, hours, hour: &quot;&quot;, mins, min: &quot;&quot;, defaultDate: [] &#125;, // 选择大于当前年份的时候 需要重置 月日时分 reMonDayHourMin(val) &#123; // 获取最新日期，防止出现页面长时间停留，造成时间不准 const date = new Date(); // 选择了明年以后 if (this.data.years[val[0]] &gt; date.getFullYear()) &#123; let months = []; for (let i = 1; i &lt;= 12; i++) &#123; months.push(formatNum(i)) &#125; this.setData(&#123; months &#125;) &#125; else &#123; let months = []; for (let i = date.getMonth() + 1; i &lt;= 12; i++) &#123; months.push(formatNum(i)) &#125; this.setData(&#123; months &#125;) &#125; &#125;, // 选择本年度 不同月份后 需要重置 日时分 reDayHourMin(val) &#123; // 获取最新日期，防止出现页面长时间停留，造成时间不准 const date = new Date(); // 这边选择的月份 可能是 01 02，所以需要将其转成 1 2 let formatSelMonth = parseInt(this.data.months[val[1]]); let countDays = new Date(this.data.years[val[0]], formatSelMonth, 0).getDate(); let days = []; // 当前日期 let CURDATE = `$&#123;date.getFullYear()&#125;$&#123;formatNum(date.getMonth() + 1)&#125;`; // 选中的日期 let SELDATE = `$&#123;this.data.years[val[0]]&#125;$&#123;this.data.months[val[1]]&#125;`; if (CURDATE == SELDATE) &#123; for (let i = date.getDate(); i &lt;= countDays; i++) &#123; days.push(formatNum(i)) &#125; this.setData(&#123; days &#125;) &#125; else &#123; for (let i = 1; i &lt;= countDays; i++) &#123; days.push(formatNum(i)) &#125; this.setData(&#123; days &#125;) &#125; &#125;, // 选择本年度 本月份 不同日期的时候 需要重置 时分 reHourMin(val) &#123; // 获取最新日期，防止出现页面长时间停留，造成时间不准 const date = new Date(); // 当前日期 let CURDATE = `$&#123;date.getFullYear()&#125;$&#123;formatNum(date.getMonth() + 1)&#125;$&#123;formatNum(date.getDate())&#125;`; // 选择日期 let SELDATE = `$&#123;this.data.years[val[0]]&#125;$&#123;this.data.months[val[1]]&#125;$&#123;this.data.days[val[2]]&#125;`; let hours = []; if (CURDATE == SELDATE) &#123; // 重置小时 for (let i = date.getHours(); i &lt;= 23; i++) &#123; hours.push(formatNum(i)) &#125; this.setData(&#123; hours &#125;) &#125; else &#123; for (let i = 0; i &lt;= 23; i++) &#123; hours.push(formatNum(i)) &#125; this.setData(&#123; hours &#125;) &#125; &#125;, // 选择本年度 本月份 同一日期的时候 需要重置 分钟 reMin(val) &#123; // 获取最新日期，防止出现页面长时间停留，造成时间不准 const date = new Date(); // 当前日期时间 let CURDATETIME = `$&#123;date.getFullYear()&#125;$&#123;formatNum(date.getMonth() + 1)&#125;$&#123;formatNum(date.getDate())&#125;$&#123;formatNum(date.getHours())&#125;`; // 选择日期时间 let SELDATETIME = `$&#123;this.data.years[val[0]]&#125;$&#123;this.data.months[val[1]]&#125;$&#123;this.data.days[val[2]]&#125;$&#123;this.data.hours[val[3]]&#125;`; let mins = []; if (CURDATETIME == SELDATETIME) &#123; // 重置分钟 for (let i = date.getMinutes(); i &lt;= 59; i++) &#123; mins.push(formatNum(i)) &#125; this.setData(&#123; mins &#125;) &#125; else &#123; for (let i = 0; i &lt;= 59; i++) &#123; mins.push(formatNum(i)) &#125; this.setData(&#123; mins &#125;) &#125; &#125;, bindChange(e) &#123; // pick view 改变值后的回调 const val = e.detail.value; // 根据选择，重置对应的时间 this.reMonDayHourMin(val); this.reDayHourMin(val); this.reHourMin(val); this.reMin(val); this.setData(&#123; year: this.data.years[val[0]], month: this.data.months[val[1]], day: this.data.days[val[2]], hour: this.data.hours[val[3]], min: this.data.mins[val[4]], &#125;) &#125;, onLoad: function(options) &#123; console.log(&quot;options&quot;,options); let date = new Date(); let &#123; modalCardTime = &quot;&quot;, modalCardDate = &quot;&quot;, modalCardName = &quot;&quot;, modalCardTel = &quot;&quot;, modalCardAvatar = &quot;&quot;, modalCardIdolid=&quot;&quot; &#125; = options; this.setData(&#123; modalCardTime, modalCardDate, modalCardName, modalCardTel, modalCardAvatar, &#125;) if (clockId &gt; 0) &#123; // 用户修改闹钟 let resetYear; let resetMonth; let resetDate; let resetHour = modalCardTime.split(&quot;:&quot;)[0]; let resetMin = modalCardTime.split(&quot;:&quot;)[1]; if (modalCardDate == &quot;今天&quot;) &#123; resetYear = date.getFullYear(); resetMonth = date.getMonth() + 1; resetDate = date.getDate(); &#125; else if (modalCardDate == &quot;明天&quot;) &#123; resetYear = date.getFullYear(); resetMonth = date.getMonth() + 1; resetDate = date.getDate() + 1; &#125; else &#123; resetYear = parseInt(modalCardDate.split(&apos;-&apos;)[0]); resetMonth = parseInt(modalCardDate.split(&apos;-&apos;)[1]); resetDate = parseInt(modalCardDate.split(&apos;-&apos;)[2]); &#125; initAllYear(resetYear, resetMonth); this.setData(&#123; years, months, days, hours, mins &#125;) let yearIndex = this.data.years.indexVf(resetYear); let monthIndex = this.data.months.indexVf(resetMonth); let dayIndex = this.data.days.indexVf(resetDate); let hourIndex = this.data.hours.indexVf(resetHour); let minIndex = this.data.mins.indexVf(resetMin); this.setData(&#123; defaultDate: [yearIndex, monthIndex, dayIndex, hourIndex, minIndex], &#125;) &#125; else &#123; initYear(); this.setData(&#123; years, months, days, hours, mins &#125;) &#125; &#125;&#125;) 关于pick-view组件⚠️⚠️ 这些代码片段是我直接在项目中复制过来的，因此无法直接在小程序跑。这边只是提供了一个简单的思路，给有需要的人或者未来的自己（记忆不好）😂😂😂。 valueNumberArray数组中的数字依次表示 picker-view 内的 picker-view-column 选择的第几项（下标从 0 开始），数字大于 picker-view-column 可选项长度时，选择最后一项。 pick-view提供了NumberArray类型的value属性，所以他只能是数字组成的数组，[1,2,3,4,5]而不能是[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;]。 因此需要做Number化。 通过value属性，我们可以设置默认展示的picker-view-column值。 因为需求中需要做不足10补零的操作，因此需要转换一下。比如3需要转化成03。但是在通过bindChange后选择出来的就是03了，因此⚠️需要做parseInt操作。可以直接将03转成3; 需求需要不能选择小于当前时间，即不能出现小于当前时间的选项，因此需要通过几个方法reMonDayHourMin,reDayHourMin,reHourMin,reMin来比对选择的时间和当前的时间，防止出现选择其他时间后，选项不出来的bug。 最后，在进入页面的时候需要重新获取最新的时间，let date = new date();防止用户长时间停留页面，造成时间不准的情况 Thanks,新的一年。加油！❤️]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[即将再见的2018]]></title>
    <url>%2F%E5%8D%B3%E5%B0%86%E5%86%8D%E8%A7%81%E7%9A%842018.html</url>
    <content type="text"><![CDATA[呵，生活。每个人都逃不过【真香定律】。以前最讨厌的年终总结，居然主动写在了自己的博客里。而且还觉得挺好。。。2018年，于我来说是一个喜忧参半的一年。年初五，完成了自己的终身大事。去年5月购置的期房也于8月拿到了手。从一个家公司跳槽到另一家公司，不一样的文化，不一样的环境，新的工作感受。至亲的离开，新生命的到来。这一年，悲喜交加，跌宕起伏，感觉一下子成长了很多。生活也是就是这样。你永远不知道下一秒会是什么，你也无法揣测下一秒会发生什么。有时候自信满满，意气风发，感觉可以操纵全世界。下一秒可能会被现实迎头棒喝，只能默默的躲在角落，抚摸伤口，暗自神伤。生活真的就是这样。 回顾当时年初定下的目标 熟练掌握php 熟悉了解python 减肥 发现没有一条完全做到，反而第三条因为新公司下午茶机制，体重又涨了好多。呵，生活。 关于博客最近发现博客之前的图片都打不开了。部分原因是由于以前图床用的七牛cdn。后来最近政策改了，网站必须经过备案才能使用cdn，由于这个是挂在gitpage上的，所以一些图片都炸了。至于还有一些图片是放在公司的cdn上的。经过调试，发现图片地址可以在浏览器打开。，但是在page上打开的话直接显示403。真的好蛋疼，最近又忙，然后又担心公司cdn会变化，并本地图片又有限制，所以，以后尽量减少blog对图片的引用。多写一些文字，表情也挺好。 关于2019不乱立flag，立足现实，脚踏实地。共勉~]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css实现标题左右横线]]></title>
    <url>%2Fcss%E5%AE%9E%E7%8E%B0%E6%A0%87%E9%A2%98%E5%B7%A6%E5%8F%B3%E6%A8%AA%E7%BA%BF.html</url>
    <content type="text"><![CDATA[直接上代码1&lt;div class=&apos;title&apos;&gt;快来设置吧&lt;/div&gt; 123456789101112131415161718192021222324252627.title &#123; position: relative; font-size: 32px; color: #fff; height: 45px; line-height: 45px; text-align: center; top: 60px;&#125;.title:before &#123; content: &quot;&quot;; position: absolute; width: 28px; height: 2px; top: 50%; background-color: #fff; left: 32%;&#125;.title:after &#123; content: &quot;&quot;; position: absolute; width: 28px; height: 2px; top: 50%; background-color: #fff; right: 32%;&#125; 效果图]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序保存图片到本地授权问题]]></title>
    <url>%2F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%88%B0%E6%9C%AC%E5%9C%B0%E6%8E%88%E6%9D%83%E9%97%AE%E9%A2%98.html</url>
    <content type="text"><![CDATA[项目需求最近做一个小程序项目的时候遇到了保存图片到手机相册的一个功能。就像这样：需要通过点击【保存按钮】进行授权保存到本地 官方神坑因为海报图是后台接口给出的一个url，所以需要使用wx.downloadFile进行赋值操作，然后使用wx.saveImageToPhotosAlbum保存本地图片。在执行wx.saveImageToPhotosAlbum操作的时候需要用户授权操作。但是很坑的是，用户拒绝授权以后，在开发工具和真机上返回的回调信息是不一样的。。。其实，在不同的真机上，返回信息也是不一样的。。😂😂fail回调主要返回这两个信息saveImageToPhotosAlbum:fail:auth denied和saveImageToPhotosAlbum:fail auth deny。 所以千万不要惊讶，自己的开发工具是好的，跑到真机上就不行了。。😅😅，这个坑，官方也是没有任何回应，表示一切以真机为准。。因此需要这么解决😱😱 123if (err.errMsg === &quot;saveImageToPhotosAlbum:fail:auth denied&quot; || err.errMsg === &quot;saveImageToPhotosAlbum:fail auth deny&quot;) &#123; .......&#125; fail回调后的一些操作ok，解决完以上问题，我们需要给用户进行下一步引导。（用户表示，劳资不小心点了拒绝授权，现在劳资又想要保存图片了，但是找不到入口呀。。。）那么我们需要使用wx.openSetting进行用户引导，帮他们打开设置，进行相册授权。（让你皮~😏😏）那么问题来了，当你在fail回调中美滋滋的加上wx.openSetting的时候，发现并不能跳转，，而且我测试的是，在部分机型可以跳转。（机型没记。。😳）好气。打开官网一看一行小字 注意：2.3.0 版本开始，用户发生点击行为后，才可以跳转打开设置页，管理授权信息。 呵呵，又要手动授权了。好吧，我们需要一个按钮触发，那什么按钮比较友好呢？我能想到的就是wx.showModal。哈哈哈在这个wx.showModal的success回调中加上wx.openSetting效果很棒~ 至此，这个坑终踩过去了。小小的吐槽一下，其实wx.previewImage(Object object)其实也蛮适合做海报分享的。 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。 如果觉得授权操作麻烦，可以拿出此武器去怼PM~🤓🤓🤓 详细代码最后贴上代码 1&lt;button class=&apos;btn&apos; bindtap=&apos;postSave&apos;&gt;保存到本地相册&lt;/button&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162// 保存海报 postSave(e) &#123; wx.showLoading(&#123; title: &apos;保存中...&apos; &#125;) wx.downloadFile(&#123; url: &apos;http://xxx.com/poster.png&apos;, success: function (res) &#123; //图片保存到本地 wx.saveImageToPhotosAlbum(&#123; filePath: res.tempFilePath, success: function (data) &#123; wx.hideLoading() wx.showModal(&#123; title: &apos;提示&apos;, content: &apos;您的推广海报已存入手机相册，赶快分享给好友吧&apos;, showCancel:false, &#125;) &#125;, fail: function (err) &#123; if (err.errMsg === &quot;saveImageToPhotosAlbum:fail:auth denied&quot; || err.errMsg === &quot;saveImageToPhotosAlbum:fail auth deny&quot;) &#123; // 这边微信做过调整，必须要在按钮中触发，因此需要在弹框回调中进行调用 wx.showModal(&#123; title: &apos;提示&apos;, content: &apos;需要您授权保存相册&apos;, showCancel: false, success:modalSuccess=&gt;&#123; wx.openSetting(&#123; success(settingdata) &#123; console.log(&quot;settingdata&quot;, settingdata) if (settingdata.authSetting[&apos;scope.writePhotosAlbum&apos;]) &#123; wx.showModal(&#123; title: &apos;提示&apos;, content: &apos;获取权限成功,再次点击图片即可保存&apos;, showCancel: false, &#125;) &#125; else &#123; wx.showModal(&#123; title: &apos;提示&apos;, content: &apos;获取权限失败，将无法保存到相册哦~&apos;, showCancel: false, &#125;) &#125; &#125;, fail(failData) &#123; console.log(&quot;failData&quot;,failData) &#125;, complete(finishData) &#123; console.log(&quot;finishData&quot;, finishData) &#125; &#125;) &#125; &#125;) &#125; &#125;, complete(res) &#123; wx.hideLoading() &#125; &#125;) &#125; &#125;) &#125;]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序分享参数问题]]></title>
    <url>%2F%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0%E9%97%AE%E9%A2%98.html</url>
    <content type="text"><![CDATA[小程序分享微信小程序分享主要是使用自带的onShareAppMessage方法调起分享组件。主要写法就是 12345678910onShareAppMessage:function(res)&#123; if(res.from == &apos;button&apos;)&#123; //按钮授权 调用share &#125; return &#123; title: shareTitle, path: shareUrl, imageUrl: shareImageUrl &#125;&#125; 只要添加如上代码即可用过小程序上面···分享出去当前的页面，也可以通过在button添加 &lt;button class=&#39;share-btn&#39; open-type=&#39;share&#39;&gt;分享&lt;/button&gt; 即可调起分享方法。 诡异的bug分享小程序分享的时候只要照着上面的写法就不会有问题。但是最近在使用分享的时候发现一个诡异的bug。。😏😏具体如下： 在一个详情页分享一个跳转到首页的链接，带上一个参数。然后用户点击对应这个链接跳转到首页可以在options中取到对应的参数。这个是很ok的。但是如果这个用户在这个页面上，继续分享不带参数的链接给另外一个人，那个人接收到的链接上，居然带上了上个页面的参数！🙃🙃，然而，查看分享出去的链接上，并没有带上这个参数。。。太诡异了。。。 阿拉丁一开始以为是微信的bug，甚至跑到了微信社区里留言。。。后来把这个问题，在另外一个项目上跑，发现并没有此问题。。。且使用的基础库一样。。。。顿时不淡定了。。。🙄🙄 后来发现，我们小程序中为了统计，加入阿拉丁统计插件。。。然后发现目前使用的是一个号称7.0.0的版本。。。 然后又去官网上面下载了一个也是7.0.0版本的sdk，覆盖后，发现。。好了😡😡。 好吧，后来找到阿拉丁官方，官方技术人员也表示之前确实有这个问题，不过后来修复了。。。但是版本号却没有改。。。。 最后如果，大家也遇到类似问题，可以尝试去阿拉丁官网下载最新的sdk替换一下。。。。]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[传说中的1024节]]></title>
    <url>%2F%E4%BC%A0%E8%AF%B4%E4%B8%AD%E7%9A%841024%E8%8A%82.html</url>
    <content type="text"><![CDATA[程序员日! 1024程序员节是中国程序员的共同节日。1024是2的十次方，二进制计数的基本计量单位之一。程序员(英文》》&gt;&gt;Programmer)是从事程序开发、维护的专业人员。程序员就像是一个个1024，以最低调、踏实、核心的功能模块搭建&gt;&gt; 起这个科技世界。1G=1024M，而1G与1级谐音，也有一级棒的意思。 来自果酱的惊喜天哪，不敢相信，居然在果酱音乐过了一个传说中的1024程序猿日。除了下午茶有加餐以外。。。贴心的同事还给我们每个程序🐒准备了一件红色的格子衬衫。。。😁😁😁😁😁😁😁😁]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十月月尾]]></title>
    <url>%2F%E5%8D%81%E6%9C%88%E6%9C%88%E5%B0%BE.html</url>
    <content type="text"><![CDATA[三个月的记录距离上次写博客，已经足足过去了三个月。期间发生了太多太多的事。一些事情选择性的想去遗忘，却发现并不能。只能将其安放在心里最小的角落封存着。同时，由于原单位拖欠了很久的工资，我也于18年9月离开了原单位，来到了离家很远的新单位。期间还发生了联合旧员工一起去讨薪的奇葩事情。（集体讨薪还是很有效果的，拖欠了三个多月的工资，第二天就发了。。）新公司是一个很注重细节，崇尚流程的公司，同样，开发的任务也相对比较繁重。加班虽然不是强制，但是很多时候会加班到很晚。比如凌晨1点，甚至凌晨5点。。。 最后很开心迎来了家庭新成员，我也升级成了准爸爸。这貌似是这三个月来除了讨薪成功意外，最让人觉得开心的事情了。家里的家具，柜子全部放置到位，同样也值得小小的庆祝一下。 对未来的一些期望希望能在小程序的开发能力上有所进步，能够匹配公司的业务需求。同样希望小宝贝能健康长大，家人身体健康。希望家里家具的味道早日散去，尽早搬进新家。（租房真的太麻烦了！） 最后黑暗的几个月已经过去了，拥抱新曙光吧~]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mac提示文件已损坏解决办法-不一定有效]]></title>
    <url>%2Fmac-%E6%8F%90%E7%A4%BA%E6%96%87%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html</url>
    <content type="text"><![CDATA[imac风扇狂转解决方法公司的13年imac最近好像是疯了，稍微打开几个编辑器，浏览器啥的，风扇就狂转，一看cpu占用也不高啊。风扇出风口的风也是冷的。百度后，发现电脑时间长了，需要重启smc来解决一下。亲测有用，解决办法： 关机 同时按住 Shift, Control, Option以及电源键 同时按住 大概十秒钟吧，然后电脑就自动开机。。貌似就好了。。。（没有网上说的，松开键盘，继续按住电源的操作） 如果失败，可以重复几次 mac 提示文件已经损坏或者不能安装不明开发者软件最近下了一个cornerstone，但是下载的时候老是提示文件已损坏。后来才发现，是由于没有在系统隐私中加入允许任何来源的操作。一开始以为只有提示不能安装不明开发者软件才需要在隐私中添加这个选项。遇到文件损坏的提示，不要讲文件删除。打开终端,然后输入 1sudo spctl -–master-disable master 前面有两个- 然后最好不要复制粘贴，用手敲，不然可能会有空格啥的，，之后系统会提示输入密码，输入后即可。最后重启系统偏好设置 就会发现有这个了选项了。最后，应该可以愉快地打开之前的app了 😁]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue 报错-- xxx is not a valid attribute name]]></title>
    <url>%2Fvue-%E6%8A%A5%E9%94%99-xxx-is-not-a-valid-attribute-name.html</url>
    <content type="text"><![CDATA[问题最近在修改一个项目的bug的时候发现一个神奇的bug，点击一个按钮的时候提示 1Error in nextTick: "InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '`' is not a valid attribute name." 如图：擦咧，从来没遇到过啊 ￣□￣｜｜Google一番后，网友表示只有一个类似的错误，那就是 Failed to execute &#39;setAttribute&#39; on &#39;Element&#39;: &#39;]&#39; is not a valid attribute name. angular 4 人家还是 ag4的项目，可是我的是vue啊。。。而且之前都没有问题啊。。 解决后来一步步检查，从js传参，赋值开始，一个个检查过去没有问题。。。然后检查html发现了最低级的错误。。😓好尴尬，不知道在什么时候多敲了一个 ` 。为方便以后快速定位问题，特此留文。。。希望以后不要出现这种低级错误了。。-_-||]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序scroll-x失效的解决方法]]></title>
    <url>%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fscroll-x%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content type="text"><![CDATA[失效的scroll-x在微信小程序的文档中，使用scroll-view标签，然后给它设置一个scroll-x就可以实现元素，横向排列，可以左右滑动。。。。然而，在实际开发中，发现并不是这么简单。。。贴上部分wxml和wxss代码… 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;!-- 横向滚动商品 --&gt; &lt;scroll-view class='scroll-box' scroll-x &gt; &lt;view class='box'&gt; &lt;view class='box-hd'&gt; &lt;image src='https://ss2.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=3ab7c3c9c4fcc3ceabc0cf33a244d6b7/cefc1e178a82b90137378cd87f8da9773812ef47.jpg'&gt;&lt;/image&gt; &lt;view class='info'&gt; &lt;view class='name'&gt;jed_shi&lt;/view&gt; &lt;view class='time'&gt;剩余09:43:21&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box-img'&gt; &lt;image src='https://ss0.baidu.com/7Po3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=d369d78d98eef01f52141ec5d0fc99e0/c2fdfc039245d688b3d9dc4da8c27d1ed31b247b.jpg'&gt;&lt;/image&gt; &lt;/view&gt; &lt;view class='box-extra'&gt; &lt;text class='price'&gt;￥321&lt;/text&gt; &lt;button&gt;加入&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box'&gt; &lt;view class='box-hd'&gt; &lt;image src='https://ss2.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=3ab7c3c9c4fcc3ceabc0cf33a244d6b7/cefc1e178a82b90137378cd87f8da9773812ef47.jpg'&gt;&lt;/image&gt; &lt;view class='info'&gt; &lt;view class='name'&gt;jed_shi&lt;/view&gt; &lt;view class='time'&gt;剩余09:43:21&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box-img'&gt; &lt;image src='https://ss0.baidu.com/7Po3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=d369d78d98eef01f52141ec5d0fc99e0/c2fdfc039245d688b3d9dc4da8c27d1ed31b247b.jpg'&gt;&lt;/image&gt; &lt;/view&gt; &lt;view class='box-extra'&gt; &lt;text class='price'&gt;￥321&lt;/text&gt; &lt;button&gt;加入&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box'&gt; &lt;view class='box-hd'&gt; &lt;image src='https://ss2.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=3ab7c3c9c4fcc3ceabc0cf33a244d6b7/cefc1e178a82b90137378cd87f8da9773812ef47.jpg'&gt;&lt;/image&gt; &lt;view class='info'&gt; &lt;view class='name'&gt;jed_shi&lt;/view&gt; &lt;view class='time'&gt;剩余09:43:21&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box-img'&gt; &lt;image src='https://ss0.baidu.com/7Po3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=d369d78d98eef01f52141ec5d0fc99e0/c2fdfc039245d688b3d9dc4da8c27d1ed31b247b.jpg'&gt;&lt;/image&gt; &lt;/view&gt; &lt;view class='box-extra'&gt; &lt;text class='price'&gt;￥321&lt;/text&gt; &lt;button&gt;加入&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box'&gt; &lt;view class='box-hd'&gt; &lt;image src='https://ss2.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=3ab7c3c9c4fcc3ceabc0cf33a244d6b7/cefc1e178a82b90137378cd87f8da9773812ef47.jpg'&gt;&lt;/image&gt; &lt;view class='info'&gt; &lt;view class='name'&gt;jed_shi&lt;/view&gt; &lt;view class='time'&gt;剩余09:43:21&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='box-img'&gt; &lt;image src='https://ss0.baidu.com/7Po3dSag_xI4khGko9WTAnF6hhy/image/h%3D300/sign=d369d78d98eef01f52141ec5d0fc99e0/c2fdfc039245d688b3d9dc4da8c27d1ed31b247b.jpg'&gt;&lt;/image&gt; &lt;/view&gt; &lt;view class='box-extra'&gt; &lt;text class='price'&gt;￥321&lt;/text&gt; &lt;button&gt;加入&lt;/button&gt; &lt;/view&gt; &lt;/view&gt; &lt;/scroll-view&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374.scroll-box &#123; margin-top: 33rpx; padding-bottom: 40rpx;&#125;.scroll-box .box:first-child &#123; margin-left: 32rpx;&#125;.scroll-box .box &#123; width: 296rpx; margin-right: 32rpx;&#125;.scroll-box .box .box-hd &#123; display: flex; align-items: center;&#125;.scroll-box .box .box-hd image &#123; width: 64rpx; height: 64rpx; border-radius: 50%; margin-right: 15rpx;&#125;.scroll-box .box .box-hd .info &#123; display: flex; flex-direction: column;&#125;.scroll-box .box .box-hd .info .name &#123; font-size: 28rpx; color: #333; line-height: 1; padding-bottom: 10rpx;&#125;.scroll-box .box .box-hd .info .time &#123; font-size: 22rpx; color: #999; line-height: 1;&#125;.scroll-box .box .box-img &#123; margin-top: 16rpx;&#125;.scroll-box .box .box-img image &#123; width: 296rpx; height: 222rpx; border-radius: 15rpx;&#125;.scroll-box .box .box-extra &#123; display: flex; justify-content: space-between;&#125;.scroll-box .box .box-extra .price &#123; font-size: 32rpx; color: #f15733;&#125;.scroll-box .box .box-extra button &#123; width: 104rpx; height: 44rpx; background-color: #f15733; color: #fff; margin: 0; padding: 0; font-size: 26rpx; line-height: 44rpx; margin-right: 8rpx;&#125; 发现实际出来的效果是这样的。。扎心了，老铁！！！😭😭😭😭 解决方案。。后来发现其实只要给scroll-view加上white-space: nowrap; ，给scroll-view的子元素box加上display:inline-block就行了。。。就像这样： 123456.scroll-box &#123;white-space: nowrap;&#125;.scroll-box .box&#123;display:inline-block&#125; 就可以很爽的横向滑动了。。。。完美解决了😄😄😄 温馨提示可以不用给scroll-view设置display:flex;这种属性了，但一定要加上这个 123.scroll-box &#123;white-space: nowrap;&#125; 不然会变成这样。。😑😑😑😑]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何拒绝]]></title>
    <url>%2F%E5%A6%82%E4%BD%95%E6%8B%92%E7%BB%9D.html</url>
    <content type="text"><![CDATA[定制家具交房即将进入倒计时，家里购买橱柜家具也被提上了日程。目前准备找商家定制主卧次卧的衣柜。兜兜转转看了很多的全屋定制，最终确定下来交了押金的也只有顾家和我乐两家。顾家那边已经交了1w的订金以及初始的意向金1k若干。我乐那边目前为止交了500的意向金。本想找两家对比一下，看看哪家的性价比高在确定。却无奈发现，交意向金时候承诺可以退的押金，在销售种种推销下，变得异常艰难。。。顾家那边店长热情，给到的优惠也是蛮大。缺点是家具样品较少，设计师只根据CAD作图，无实地勘测。我乐那边，销售主管也很热情，且实地勘测房屋，出图较为精准。缺点是同顾家的那边的报价差不多，但样板间家具缝隙太大，感觉有瑕疵。其余的家具风格虽好，但价格偏贵。本想昨晚厚着脸皮前去退钱。无奈主管实在太会说，和老婆两人被他说得摇摆不定，差点准备交钱下单。。。 感慨现在的销售售前态度太好，人又是感情动物，拒绝他人，真的是一门艺术，很容易一不小心就会得罪他人。￣□￣｜｜还是周末去实体店看看更多样板，再理性的决定吧。。。]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue-cli 3.x 修改dist路径]]></title>
    <url>%2Fvue-cli-3-x-%E4%BF%AE%E6%94%B9dist%E8%B7%AF%E5%BE%84.html</url>
    <content type="text"><![CDATA[一些牢骚前端的世界真的太奇妙，更新速度真的跟火箭一样。没有一颗真正热爱它的心，真的很难继续走下去。前段时间 Node 之父 Ryan Dahl 发布新的开源项目 deno，受到了大量的关注。Ryan Dahl直言node是一个失败品，充斥很多bug和设计上的不合理，导致他也无力回天。。。。。天啦撸，可怜我们这种小前端，node还没开始，马上就要结束了。。。。好的吧，牢骚归牢骚，生活还得继续。生命不息，撸码不止。 webpack4最近在一个项目中，将vue-cli更新到了最新版的3.x。同时webpack也更新到了4.x。webpack4在一些配置上有了很大一部分的精简。据说是受到了最近蛮火的0配置开箱即用的打包工具Parcel的影响，官方也觉得webpack配置有点繁琐。（尝试了一下,在一些小项目中，确实很爽）。webpack4具体更新细节可以在官网上看到，这边就不贴了。webpack4文档 vue-cli 3.x使用新版的vue-cli构建出来的项目目录也是非常清爽。我这边在构建的时候选的是Manually features。 然后在项目打包执行yarn build的时候，打开dist目录的index.html发现资源没有正确加载。立即联想到需要改输入路径的地址。却尴尬的发现之前的build和config文件夹不见了。查阅后发现如果需要自定义配置，需要在项目的 根目录添加一个Vue.config.js。在这个文件中，我们可以进行一些个性化定制。 12345678910module.exports = &#123; // 基本路径 baseUrl: './', // 生产环境是否生成 sourceMap 文件 productionSourceMap: false, // 服务器端口号 devServer: &#123; port: 1234, &#125;,&#125; 和以前的操作一样 在/前面直接加上.就行了 详细配置12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455module.exports = &#123; // 基本路径 baseUrl: '/', // 输出文件目录 outputDir: 'dist', // eslint-loader 是否在保存的时候检查 lintOnSave: true, // use the full build with in-browser compiler? // https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only compiler: false, // webpack配置 // see https://github.com/vuejs/vue-cli/blob/dev/docs/webpack.md chainWebpack: () =&gt; &#123;&#125;, configureWebpack: () =&gt; &#123;&#125;, // vue-loader 配置项 // https://vue-loader.vuejs.org/en/options.html vueLoader: &#123;&#125;, // 生产环境是否生成 sourceMap 文件 productionSourceMap: true, // css相关配置 css: &#123; // 是否使用css分离插件 ExtractTextPlugin extract: true, // 开启 CSS source maps? sourceMap: false, // css预设器配置项 loaderOptions: &#123;&#125;, // 启用 CSS modules for all css / pre-processor files. modules: false &#125;, // use thread-loader for babel &amp; TS in production build // enabled by default if the machine has more than 1 cores parallel: require('os').cpus().length &gt; 1, // 是否启用dll // See https://github.com/vuejs/vue-cli/blob/dev/docs/cli-service.md#dll-mode dll: false, // PWA 插件相关配置 // see https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-pwa pwa: &#123;&#125;, // webpack-dev-server 相关配置 devServer: &#123; open: process.platform === 'darwin', host: '0.0.0.0', port: 8080, https: false, hotOnly: false, proxy: null, // 设置代理 before: app =&gt; &#123;&#125; &#125;, // 第三方插件配置 pluginOptions: &#123; // ... &#125;&#125;]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用css3 var变量 实现酷炫button效果]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8css3-var%E5%8F%98%E9%87%8F-%E5%AE%9E%E7%8E%B0%E9%85%B7%E7%82%ABbutton%E6%95%88%E6%9E%9C.html</url>
    <content type="text"><![CDATA[css3 var 变量定义无意中发现 css3的拥有一个自定义属性的功能，利用这个功能，我们可以实现灰常牛逼的功能。如图： css自定义变量的语法是 --*取名规则也很广，除了$、[、^、(、%都可以取，甚至可以取中文名。。举个栗子: 1234p &#123; --牛逼颜色: #ff4400; color: var(--牛逼颜色);&#125; 咋一看，跟sass 、less变量差不多~ 但是它是css原生自带的，很是方便。但是它是不支持设置属性名的，例如： 1234p&#123; --test:font-size; var(--test):24px;&#125; oh,这样写是无效的。。。。 var 的缺省值还有一个就是缺省值，设置的值不合法的时候，会给出一个默认值来保证正常解析 例如这样： 1234p&#123; --color: 20px; background-color:var(--color)&#125; 它会解析成 background-color:transparent; var 空格尾随特性1234p &#123; --size: 20; font-size: var(--size)px;&#125; 这样写，实际上会变成这样 font-size:20 px 自动变成一个空格。。。。好坑，千万不要用sass或者less的变量的概念来带节奏。。正确的写法是这样 1234p &#123; --size: 20px; font-size: var(--size);&#125; 或者 1234p &#123; --size: 20; font-size: calc(var(--size) * 1px);&#125; 具体详细的可以参考 张鑫旭大神的博客 实际应用让我们用这个神奇的变量来实现一个牛逼的按钮效果吧，直接上代码html 123&lt;button class="button"&gt; &lt;span&gt;我来试试这个！&lt;/span&gt;&lt;/button&gt; 123456789101112131415161718192021222324252627282930313233.button &#123; position: relative; appearance: none; background: #f72359; padding: 1em 2em; border: none; color: white; font-size: 1.2em; cursor: pointer; outline: none; overflow: hidden; border-radius: 100px; &#125;.button span &#123; position: relative; &#125; .button::before &#123; --size: 0; content: ''; position: absolute; left: var(--x); top: var(--y); width: var(--size); height: var(--size); background: radial-gradient(circle closest-side, #4405f7, transparent); transform: translate(-50%, -50%); transition: width .7s ease, height .7s ease; &#125; .button:hover::before &#123; --size: 400px; &#125; 123456document.querySelector('.button').onmousemove = (e) =&gt; &#123; const x = e.pageX - e.target.offsetLeft const y = e.pageY - e.target.offsetTop e.target.style.setProperty('--x', `$&#123; x &#125;px`) e.target.style.setProperty('--y', `$&#123; y &#125;px`) &#125; 搞定收工！[代码出处](https://www.zcfy.cc/article/stunning-hover-effects-with-css-variables# %E8%AF%91%E8%80%85%EF%BC%9Ameakaka)]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mac修改用户名]]></title>
    <url>%2Fmac%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D.html</url>
    <content type="text"><![CDATA[不合理改名导致的问题在不安分基因的驱动下，突然想改用了好几年的mac的用户名字。于是在系统偏好设置-&gt;用户与群组-&gt;右击当前的账号-&gt;高级设置-&gt;一顿改名操作后。。。发现原来的管理权限没有了！！！改完名字之后变成了普通权限。再点解锁的时候。发现需要输入用户名，密码。。。是的，账号被锁住了。。。 解决办法一顿搜索之后，发现这个操作比较完美，现在贴出来，留作纪念。 重启电脑，重启的时候，在出现apple logo的时候按住 command+s 不出意外的话，进入界面会变成terminal的状态 输入命令 /sbin/mount -uaw 按回车 ps:注意中间的空格 rm var/db/.AppleSetupDone 按回车 ps:注意中间的空格 reboot 按回车 电脑会立刻重启。然后进入后，会发现界面和刚买的时候一样，需要设置，这边可以先跳过apple 账号设置。然后同样来到 系统偏好设置-&gt;用户与群组给之前的账号设置管理员权限，重启电脑即可。 正确的改名方法之前的改名方法在pc上好使，在mac上就非常麻烦了。在mac上改名正确的姿势应该是这样的。 打开 系统偏好设置-&gt;用户与群组 解锁后，新增一个账号 ps:可以取任意名字 比如（Test） ，并且给这个账号管理员权限 重启电脑，选择新建的账号 Test 登陆。 再次来到 系统偏好设置-&gt;用户与群组 解锁后，选择要改名字的账号，右击直接修改即可。 再次重启电脑 ok,搞定~ 有强迫真的话，可以把刚刚新建的Test账号删掉。 电脑改名电脑改名的话，直接进入 系统偏好设置-&gt;共享 修改计算机名字即可 硬盘改名在 访达里面找到硬盘，右击改名即可 terminal改名电脑修改名字的时候会发现 terminal还是原来的名字。 在 terminal 输入sudo scutil --set HostName yourname 例如sudo scutil --set HostName jed 就会把terminal的计算机名字改成jed了 按照提示输入密码 重启terminal,ok 搞定~ 关闭terminal的计算机名字如果觉得计算机名字太长，还可以关闭这个，让terminal只显示当前的用户名，显得更加清爽一点。 在 terminal中输入 sudo vim /etc/bashrc 按提示输入密码 进入vim，然后按一下 i 进入写入操作 在PS1=&#39;\h:\W \u\$ &#39;前面加上#注释掉这行 也就是这样#PS1=&#39;\h:\W \u\$ &#39; 注意大小写和空格 然后在下面一行写上PS1=&#39;\W \$&#39; 注意大小写和空格 按一下ESC,然后输入 :wq! 重启terminal 大功告成！]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ajax 请求后台跨域]]></title>
    <url>%2Fajax-%E8%AF%B7%E6%B1%82%E5%90%8E%E5%8F%B0%E8%B7%A8%E5%9F%9F.html</url>
    <content type="text"><![CDATA[坑爹的问题最近在项目中遇到一个跨域问题，坑了好久，查阅了很多资料终于解决了，特此记录。 问题描述前端库我这边用的axios。后台是java。前台请求方法是post。token验证放在header里面传到后台。前端代码如下： 123456789101112131415161718axios.defaults.baseURL = getAppParams().host;axios.defaults.headers.common['token'] = getAppParams().token;axios(&#123; method: "post", url: 'order/ordcustomer/save', data: formdata, transformRequest: [function(data) &#123; return JSON.stringify(data) &#125;] &#125;) .then(res =&gt; &#123; console.log(res); &#125;) .catch(err =&gt; &#123; console.log(err) &#125;) 浏览器会提示这样：Response to preflight request doesn&#39;t pass access control check: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested resource. Origin &#39;http://localhost:8080&#39; is therefore not allowed。 一些概念一番查询后发现。当后台设置Content-Type:application/json的时候，前端请求为post的时候，即为复杂请求。这时候，浏览器一次post请求会变成两次。 第一次浏览器会优先发送一个options给后台，后台验证通过 开始发送真正的post请求关于预检的概念网上有很多，我这边就不记录了。传送门 解决方法这个问题还是得从后台解决。 这是后台的修改代码。后台框架shiroservlet filter部分 1234567891011121314151617 @Overridepublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException &#123; // TODO Auto-generated method stub HttpServletResponse resp = (HttpServletResponse) response; HttpServletRequest rep = (HttpServletRequest) request; resp.addHeader("Access-Control-Allow-Origin",rep.getHeader("Origin")); //允许跨域请求中携带cookie resp.addHeader("Access-Control-Allow-Credentials", "true"); // 如果存在自定义的header参数，需要在此处添加，逗号分隔 resp.addHeader("Access-Control-Allow-Headers", "authorization,Origin, No-Cache, X-Requested-With, " + "If-Modified-Since, Pragma, Last-Modified, Cache-Control, Expires, " + "Content-Type, X-E4M-With"); resp.addHeader("Access-Control-Allow-Methods", "GET, POST, OPTIONS"); chain.doFilter(request, response);&#125; 好多网上推荐的是，将resp.addHeader(&quot;Access-Control-Allow-Origin&quot;,*);因为这边已经设置了Access-Control-Allow-Credentials:true，所以前端跨域的时候时候会带上cookie。这样在请求的时候就会产生冲突。所以一定要将Access-Control-Allow-Origin设置成rep.getHeader(&quot;Origin&quot;)!!! 传送门 还有一个细节就是，后台还要判断一下获取的请求，判断此次是否是预检请求（即getHeader()==&quot;OPTIONS&quot;），如果相同则 return true允许跨域；预检后，正式请求。 12345if (((HttpServletRequest) request).getMethod().equals("OPTIONS"))&#123; return true; &#125; else&#123; //。。。。。。。。。。。。。 &#125;]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git 一些状态解释]]></title>
    <url>%2Fgit-%E4%B8%80%E4%BA%9B%E7%8A%B6%E6%80%81%E8%A7%A3%E9%87%8A.html</url>
    <content type="text"><![CDATA[git 常见的文件提示在使用git checkout , git status，或git diff files时会出现一些状态标志，M,T,D,A,R,U等等。这边记录一下这些常见的状态所对应的信息 A: 你本地新增的文件（服务器上没有）. C: 文件的一个新拷贝. D: 你本地删除的文件（服务器上还在）. M: 文件的内容或者mode被修改了. R: 文件名被修改了。 T: 文件的类型被修改了。 U: 文件没有被合并(你需要完成合并才能进行提交)。 X: 未知状态(很可能是遇到git的bug了，你可以向git提交bug report)。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给hexo 设置自己的域名]]></title>
    <url>%2F%E7%BB%99hexo-%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D.html</url>
    <content type="text"><![CDATA[背景这个基于hexo搭建的博客也差不多搭建了一年了。之前由于一些情况，导致注册的域名不用了好久，转而一直用gitpage生成的域名。最近闲来无事，又将原来的域名翻出来,重新绑定了这个博客。这样直接访问原来的域名，就可以跳转到此博客了。也实现了个(zhuang)性(x)域名博客。 新的域名之前的resping.com已经废弃了，今天又申请了一个新的更有意义的域名jedmm。然后一番解析后，成功绑定到gitpage。 具体操作 域名解析，绑定到博客。 在 source/ 文件下新增CNAME文件，里面写上自己的域名 (如果不这样操作的话，会发现每次执行hexo d的时候又默认deploy到原来的地址，而不是自己想要绑定的新域名地址) hexo clean hexo g hexo d 收工]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[520]]></title>
    <url>%2F520.html</url>
    <content type="text"><![CDATA[我能想到的最浪漫的事，就是把你写进我的博客里。 老婆，爱你哟 ♥ ![lp](img/lp.jpg) 附小诗一首。 缘 遇见 三生恋 两手相牵 小冬和小朦 恋爱功德圆满 相约白首共百年 心心相印情比金坚 天荒地老真爱恒如钻 执子之手神前许下誓言 同甘苦共欢笑每一天 爱你疼你直到永远 幸福降临一瞬间 喜悦充满心田 一吻胜千言 爱意流转 冬与朦 心愿 圆]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于vue slot]]></title>
    <url>%2F%E5%85%B3%E4%BA%8Evue-slot.html</url>
    <content type="text"><![CDATA[关于slotvue的slot具有很强大的功能，但是由于平常时间很少使用，导致对其很陌生。今天花了一点时间了解了一下，发现它很好用，也很好理解。 使用方法&lt;slot&gt;在一些教程上写的很高大上，搞的小白一头雾水，其实说白了它就是这样使用的。举个栗子：这里有一个组件 123456 const app = new Vue(&#123; el: '#app', &#125;);Vue.component('test',&#123; template:`&lt;div&gt;wow,我只是一个小组件！&lt;/div&gt;`&#125;) 123&lt;div id="app"&gt; &lt;test&gt;&lt;/test&gt;&lt;/div&gt; 这很简单，就会在页面上得到这样一个显示。 slot这时候发现，这个组件里面需要扩展其他的东西，我们暂且需要加个span吧。这个span又是可有可无的，不能修改test组件。 123Vue.component('test',&#123; template:`&lt;div&gt;wow,我只是一个小组件！&lt;span&gt;我是追加的内容！&lt;/span&gt;&lt;/div&gt;`&#125;) 这样写的话组件就变了，不能通用了~ 如果这样呢？ 123 &lt;div id="app"&gt; &lt;test&gt;&lt;span&gt;我是追加的内容！&lt;/span&gt;&lt;/test&gt;&lt;/div&gt; 好的吧，打开浏览器刷新一下，还是原来的内容，追加的span没有展示出来！ 这时候，我们就可以用slot帮我们解决~ 我们可以这样写 123456789// 在组件里面加上 这个slotVue.component('test',&#123; template:`&lt;div&gt;wow,我只是一个小组件！&lt;slot&gt;&lt;/slot&gt;&lt;/div&gt;`&#125;)&lt;div id="app"&gt; &lt;test&gt;&lt;span&gt;我是追加的内容！&lt;/span&gt;&lt;/test&gt; &lt;/div&gt; 当当当~ 出来了 ps：可以追加任意内容哦。设置可以插入组件。 123&lt;test&gt;&lt;div&gt;&lt;span&gt;我是追加的内容！&lt;/span&gt;&lt;h1&gt;好多好多标签&lt;/h1&gt;&lt;/div&gt;&lt;/test&gt;&lt;test&gt;&lt;aa&gt;&lt;/aa&gt;&lt;/test&gt; 具名slot顾名思义，就是有名字的插槽。当我们有很多很多slot的时候，为了防止冲突，就需要给slot取一个名字。所以slot有一个属性叫做name。有点像input name一样。我们可以给name取任意名字。 123456Vue.component('test',&#123; template:`&lt;div&gt;wow,我只是一个小组件！&lt;slot name="hd"&gt;&lt;/slot&gt;&lt;/div&gt;`&#125;)&lt;div id="app"&gt; &lt;test&gt;&lt;span slot="hd"&gt;我是追加的头部&lt;/span&gt;&lt;span slot="bd"&gt;我是追加的尾部&lt;/span&gt;&lt;/test&gt; &lt;/div&gt; 这样写的话 vue只会展示 slot=&quot;hd&quot;的部分，后面的内容就会不展示了，这极大的方便了我们构建灵活的组件。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初八开工]]></title>
    <url>%2F%E5%88%9D%E5%85%AB%E5%BC%80%E5%B7%A5.html</url>
    <content type="text"><![CDATA[新年快乐！噗，距离上篇博客已经隔了一年 o(￣︶￣)o。时间这个皮条客再次将我拉向了新的一年。大年初五完成了自己的终身大事，感觉自己身上的担子又重了一些。18年将继续努力，希望自己在技术能力上有新的突破，加油~ 新一年要做的事，以及规划1.熟练掌握php2.熟悉了解python3.减肥 O(∩∩)O哈哈~) 共勉吧~ 顺便记录一个坑刚刚，就在刚刚准备运行hexo d把文章推上去的时候，throw了一大堆错误，错误如下 12345678910111213141516171819202122fatal: HttpRequestException encountered. An error occurred while sending the request.bash: /dev/tty: No such device or addresserror: failed to execute prompt script (exit code 1)fatal: could not read Username for 'https://github.com': No errorFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: fatal: HttpRequestException encountered. An error occurred while sending the request.bash: /dev/tty: No such device or addresserror: failed to execute prompt script (exit code 1)fatal: could not read Username for 'https://github.com': No error at ChildProcess.&lt;anonymous&gt; (D:\sunnyDesmond.github.io\node_modules\hexo-util\lib\spawn.js:37:17) at emitTwo (events.js:126:13) at ChildProcess.emit (events.js:214:7) at ChildProcess.cp.emit (D:\sunnyDesmond.github.io\node_modules\cross-spawn\lib\enoent.js:40:29) at maybeClose (internal/child_process.js:925:16) at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5) 貌似提示仓库地址不正确。。。一脸懵逼。一顿百度，发现只要将根目录下的_config.yml 改个git的ssh就行了，改动如下 1234//old repository: https://github.com/SunnyDesmond/sunnyDesmond.github.io.git//new repository: git@github.com:SunnyDesmond/sunnyDesmond.github.io.git 不明觉厉。。。。]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue2 子组件调用父组件]]></title>
    <url>%2Fvue2-%E5%AD%90%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E7%88%B6%E7%BB%84%E4%BB%B6.html</url>
    <content type="text"><![CDATA[一些插曲时间过的真快。没几天就要圣诞节了。看了一下以前的日志，果然好久没有更新了。。。年底之前还躁动了一下，准备换个环境，最终还是被boss的加薪留住了。既然留下来了，那就沉住心，继续好好工作~ 问题描述在vue项目中，父子组件经常会需要调用方法，传递参数。之前也总是不是很清晰。今天又遇到了，顺便记录一下，加深记忆。这边就举一个子组件调用父组件的一个方法：假设这里有个组件 123456789&lt;child&gt;&lt;/child&gt;//父组件中有个方法···methods:&#123; wantAlert()&#123; alert(1) &#125;,&#125; 如果child想要直接调用wantAlert()vue会报错。那么可以这样操作。在child中的methods里这样写 1234567···template:`&lt;div @click="childClick"&gt;&lt;/div&gt;`,methods:&#123; childClick:function()&#123; this.$emit("callchild"); &#125;,&#125; 父组件中需要加一下这个 12345678910··· methods:&#123; wantAlert:function()&#123; alert(1) &#125;, // 子组件调用父组件 resChild: function() &#123; this.wantAlert(); &#125; &#125; 然后在这个child组件上加上这个 1&lt;child v-on:callchild=&quot;resChild&quot;&gt;&lt;/child&gt; 这样差不多就ok了，传值的话，也是类似这样。先这么多吧，以后问题再记录。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue 2.0 渲染HTML]]></title>
    <url>%2Fvue-2-0-%E6%B8%B2%E6%9F%93HTML.html</url>
    <content type="text"><![CDATA[使用vue添加文本的时候，我们再也不用像jq一样使用append方法插入后台传过来的标签或者数据了。使用v-text和v-html我们可以轻松搞定一切。最近在使用vue渲染一段来自后台文本编译器传过来的数据的时候，发现v-html不好用了。代码和图示如下： 1234567891011121314151617181920212223242526272829303132333435&lt;div class=&quot;protocol-content&quot; v-html=&quot;content&quot;&gt;&lt;/html&gt; new Vue(&#123; el: &quot;#protocol&quot;, data() &#123; return &#123; content: null, &#125; &#125;, methods: &#123; // 获取服务协议 getContent: function() &#123; let that = this; let url = `$&#123;urlParam.domain()&#125;api/agreement/appRegistAgreement`; axios(&#123; url: url, method: &apos;get&apos;, params: &#123; token: &quot;1632e581-d537-40b0-ad81-215c94280d32&quot; &#125;, &#125;).then(function(res) &#123; const prorocol = res.data.data; that.content = prorocol; &#125;) .catch(function(error) &#123; console.log(error); &#125;); &#125;, &#125;, created() &#123; this.getContent(); &#125; &#125;) 兴高采烈的以为结束了，打开chrome发现是这样。。具体的渲染情况会惊奇的发现，居然多了引号。。。网上找了一些方法，有一个不错，贴出来分享一下。 这边我们需要对传过来的数据在进行过滤一下 12345string.replace(prorocol ? /&amp;(?!#?\w+;)/g : /&amp;/g, '&amp;amp;') .replace(/&amp;lt;/g, "&lt;") .replace(/&amp;gt;/g, "&gt;") .replace(/&amp;quot;/g, "\"") .replace(/&amp;#39;/g, "\'"); ok,将我的代码修改如下 1234567··· that.content = prorocol.replace(prorocol ? /&amp;(?!#?\w+;)/g : /&amp;/g, &apos;&amp;amp;&apos;) .replace(/&amp;lt;/g, &quot;&lt;&quot;) .replace(/&amp;gt;/g, &quot;&gt;&quot;) .replace(/&amp;quot;/g, &quot;\&quot;&quot;) .replace(/&amp;#39;/g, &quot;\&apos;&quot;);··· ok，成功了！ 如图]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js获取html标签]]></title>
    <url>%2Fjs%E8%8E%B7%E5%8F%96html%E6%A0%87%E7%AD%BE.html</url>
    <content type="text"><![CDATA[很多时候我们会用到这样的样式 1234html,body&#123;height:100%;overflow:hidden;&#125; 如果要用到js的话我们可以这样写： 12document.documentElement.style.overflow = "hidden";document.body.style.overflow = "hidden"; 是的，只要用 document.documentElement就可以获取HTML这个标签啦。顺便再列一下其他的几种获取方法。 document.getElementsByTagName(“html”)[0]; document.querySelector(“html”); document.body.parentNode; $(‘html’).outerHTML() 写帖记录。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[让video在div中全屏]]></title>
    <url>%2F%E8%AE%A9video%E5%9C%A8div%E4%B8%AD%E5%85%A8%E5%B1%8F.html</url>
    <content type="text"><![CDATA[需求不废话，直接上需求。需要实现在一个5500*500的div中，让div中的video自动铺满，显示全屏。如图1： 坑爹当你尝试这么写的话： 123456789101112.video &#123; width: 500px; height: 500px; background-color: #bbc13d; margin: 50px auto; &#125;.video video &#123; width: 100%; height: 100%; display: block; &#125; 貌似老板或者客户会不满意，我明明让你铺满全屏，你为啥给我来个居中？ 一个属性帮你搞定来，试试把这个属性object-fit: fill;加到你可爱的video标签上去，你就能得到全屏的video了。不要用什么js计算div宽高了，是不是刺激？如图2： 兼容性图3：噗，万恶的ie！不过如果不怎么考虑ie的话，可以尝试一下使用这个简单但又强大的属性哦]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一次私活经历]]></title>
    <url>%2F%E4%B8%80%E6%AC%A1%E7%A7%81%E6%B4%BB.html</url>
    <content type="text"><![CDATA[呼呼时间真快，转眼间国庆已经过完了，而我已经工作了第三天了（再次羡慕一下放8天的同学） 关于私活我相信，做前端的小伙伴一定有过接私活的经历。接私活有以下几个优点： 丰富我们的闲暇时间 巩固扩大我们的知识层面 认识更多的小伙伴 当然了，可以赚取佣金（个人觉得是最重要的【手动滑稽】） 一次特殊的经历趁着最近公司不忙，我也接了几个私活，成功的，我这边就不说了，主要记一下失败的一次。在某一个阳光明媚的早上，我打开了某一社交网站，加粗加黑的标题【长期招收兼职前端开发】像一盏黑夜中的白炽灯，闪瞎了我24k钛合金狗眼。接下来，加q，详聊，这边就不赘述了。需求是做一个响应式企业站。拿到的是常规自适应首页psd（先做首页），没有响应式布局。只需切图，无需做数据交互。ok，没问题，直接开搞，熬了几个晚上，兴致勃勃，把代码打包发给了他们。 “这边需要加个视频播放按钮，可以点击播放”。 我： 【写个js，ok，加完】。 “这边鼠标移上去图片需要有颜色切换”。 我：【图片没有做两套不同的颜色，考虑用css做，ok，搞定】 “这边需要加社交分享功能”。 我：【没事，用jiathis 、bshare插件，搞定~】 “网站需要做成响应式”。 我：【psd，没有响应式布局方案，不知道怎么做~】 “自己去调整~” 我：【刚准备说“好。。”】 “要不这样 这个案子我让别人做吧，这样下去时间来不及，后面有简单的案子我再找你吧” （原话） 我：【“哦。。。。。”】 一些收获事物都是总有对立面，在这件事上，对错无需去评判，只能说我的技术比较菜，达不到人家的 快的要求。收获还是不小的。 鼠标hover，让png变色，常规的做法无非几种，要么用字体文件，改变color值。要么用两套背景色，切换背景图。 示例图： 最后一种办法则是使用css3的 filter：dorp-box() 做 drop-box是css3的一个投影属性写法。 鉴于他们死活不肯给两套背景图的前提下，我这边是这样处理的 1234567891011121314151617181920212223 //将整个boxoverflow:hidden; //中间图标部分 .icon&#123; width: 100px; height: 100px; background-size: auto 100%; margin-bottom: 20px; position: relative; &amp;.icon1 &#123; @include bg('../../dist/img/adv_1.png'); &#125; &#125;.box&#123; &amp;:hover &#123; background-color: #f96b6b; box-shadow: 0 0 15px #f96b6b; .icon &#123; left: -100px; border-right: 200px solid transparent; filter: drop-shadow(#fff 200px 0px); &#125; &#125;&#125; 用boder-right撑开整个icon，将投影放入撑开的区域，最后设置投影颜色~ 更多关于drop-box，可以参考这个 做响应式网站的时候，设计需要给出响应式布局psd图吗？ 网上兼职的时候，最好能有个定金，避免出现类似情况。 在没有完工的时候，不要交出代码，可以给个预览版本。可以将自己的代码放到自己的服务器上供对方预览。用构建工具的话，只给build或者dist目录下的文件，源码完工的时候给 学会了用ps改变图层的颜色，新技能 √get 项目地址： 对自己说的话纸上得来终觉浅，绝知此事要躬行。继续加油~]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国庆双节前期]]></title>
    <url>%2F%E5%9B%BD%E5%BA%86%E5%8F%8C%E8%8A%82%E5%89%8D%E6%9C%9F.html</url>
    <content type="text"><![CDATA[中秋礼物白驹过隙，距离上次更新时间已经过去了整整两个礼拜。时间真的过得好快。转眼间再过两天就要国庆中秋双节了。。公司这边“离经叛道”，没有放常规的8天，而是选择了放6天。。。感觉好心痛。值得一提的是，中秋礼物居然给员工一人发了一个空气净化器。。。恩~非常有想法。 关于工作公司的一个B2B2C新项目已经开始进行。跟同事讨论一下，摒弃了常规的jq，使用了vue。感觉很兴奋。虽然不是第一次使用vue，但这毕竟是第一次将vue实践于正式项目，有点里程碑的感觉。仿佛回到了当初使用jquery的感觉。由于这个是一个hybird 项目，所以我这边没有用vue全家桶，只是单纯的使用script引入的形式。整体还是用gulp构建。整体的技术栈=vue+gulp+es6+sass。 关于游戏自从购置mac以后，成功戒掉了LOL，然后入坑了炉石传说。不得不说这是一个神奇的游戏，很喜欢。还成功的安利了公司两个小伙伴入坑。这个月终于拿到了萨满金头外加5级低保。噗，感觉很不错，哈哈哈哈哈。。。 最后祝大家节日快乐，升职加薪，当(省略一万个字)。。。]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[干货-前端插件合集]]></title>
    <url>%2F%E5%B9%B2%E8%B4%A7-%E5%89%8D%E7%AB%AF%E6%8F%92%E4%BB%B6%E5%90%88%E9%9B%86.html</url>
    <content type="text"><![CDATA[偶然间看见了一个篇分享前端插件的干货。我扫一下，发现很多都是在日常开发中用得到，顺手把文章复制过来，记录一下。原文 javascript库Particles.js — 一个用来在 web 中创建炫酷的浮动粒子的库 Three.js — 一个用来在 web 中创建 3d 物体和 3d 空间的库 Fullpage.js— 快速实现全屏滚动特性 Typed.js — 打字机效果 Waypoints.js — 滚动到某个元素位置时触发一个功能 Highlight.js — web 语法高亮 Chart.js — 使用 JavaScript 创建漂亮的图表 Instantclick — 能够明显加速网站加载时间，鼠标 hover 时预加载资源 Chartist — 另一个图表库 Motio — 一个基于动画和平移的雪碧图库 Animsition — CSS 实现动画过渡的 jQuery 插件 Barba.js — 流式页面过渡 TwentyTwenty — 一个对比图片的可视化 diff 工具 Vivus.js — 在 SVG 上绘制动画 Wow.js — 滚动时展现动画 Scrolline.js — 页面滚动时显示滚动进度 Velocity.js — 快速流畅的 JavaScript 动画 Animate on scroll — 漂亮的页面滚动元素动画 Handlebars.js — Javascript 模板 jInvertScroll — 视差滚动 One page scroll — 又一个页面滚动库 Parallax.js — 对智能设备方向变化做出响应的视差引擎 Typeahead.js — 搜索补全 Dragdealer.js — 炫酷拖拽 Bounce.js — 创建炫酷的 CSS3 动画 Pagepiling.js — 全屏滚动 Multiscroll.js — 两列垂直反向滚动 Favico.js — 动态 favicon Midnight.js — 固定头部切换效果 Anime.js — 动画库 Keycode — 获取键盘按键的 JavaScript keycode Sortable — 拖拽插件 Flexdatalist — 自动补全 Slideout.js — 移动应用侧滑导航 Jquerymy — 使用 jQuery 实现双向数据绑定 Cleave.js — 实时格式化输入内容 Page — 客户端单页应用路由 Selectize.js — 用来添加 tag 的 Hybrid 选择框 Nice select — 创建漂亮的选择框的 jQuery 库 Tether — 使用固定定位来创建相关元素 Shepherd.js — 为应用创建新手引导 Tooltip — tooltip 提示框 Select2 — Jquery 选择框插件 IziToast — 通知弹窗实现 IziModal — 模态框实现 CSS 库 / 设计相关Animate.css — 动画库 Flat UI Colors — 扁平化设计配色 Material design lite— 基于 Google material design 的框架 Colorrrs — 随机颜色生成器 Section separators — CSS 实现区域分割 Topcoat — 框架 Create ken burns effect — 使用 CSS3 动画实现 Ken burns 特效 DynCSS — 给 CSS 添加 function，动态化 CSS Magic animations — CSS3 实现动画特效 CSSpin — css spinners 合集 Feather icons — Icon 集合 Ion icons — Icon 集合 Font awesome — Icon 集合 Font generator — 组合多个字体创建混合字体 On/Off switch — 使用 CSS 创建 on/off 开关、radio 按钮 UI Kit — 框架 Bootstrap — 框架 Foundation — 框架 有用的产品/链接cheatsheet — 可以写在中的所有标签 Ghost — 基于 Node.js 的博客平台 What runs — 一个用于网站技术分析的 Chrome 插件 Learn anything — 一个强大的用于分析某个主题的思维导图]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo多终端搭建]]></title>
    <url>%2Fhexo%E5%A4%9A%E7%BB%88%E7%AB%AF%E6%90%AD%E5%BB%BA.html</url>
    <content type="text"><![CDATA[hexo用过hexo搭建博客的同学都知道，hexo是一个非常轻量高效的博客搭建工具。配合强大的makrdown文件，分分钟编译出漂亮牛逼的页面，瞬间发布，省时省心。 一些问题然而它也并不是完美的。比如我在公司电脑上，辛辛苦苦搭建了博客，写入文章且正常发布了。但是回到家，突然又想写一篇文章。这时候就显得非常蛋疼。如果重新安装的话，之前写的好多配置就没有了。。。在网上找了好多文章，有说把整个项目拷贝到百度网盘的（好吧，这个确实比较low，但也不失为很简单粗暴的方法）这个带来的缺点就是，你每次更新新的文件之后你必须要重新打包你的文件，然后上传到你的网盘空间。。。在这个GitHub漫天飞的年代，如果可能，我们当然会选择使用github来作为我们的仓库 使用github我这边采用的办法我感觉很简单。只需要将你的hexo项目作为两部分，分别放入github仓库中即可。搭建过hexo博客的都知道，我们一开始就会新建一个仓库，这个仓库用来存放hexo生成的静态页面。这个地址你可以在根目录下的_config.yml中的repository找到。 1234deploy: type: git repository: https://github.com/SunnyDesmond/sunnyDesmond.github.io.git branch: master 然后只要在这个基础上新建一个新的分支，我这边分支名字叫做hexo,当然了你可以取任意你喜欢的名字。这个仓库中我们就用来存放hexo的项目配置文件，方便我们在不同的终端中下载安装我们的博客。一般情况下我们只要上传这么多文件夹到 hexo即可，如图： scaffolds/ source/都在我们博客项目的根目录下文件夹 _config.yml也是我们根目录下的文件，注意不是 theme主题下的_config.yml 主题的配置文件一般都在themes／主题名称／下的_config.yml里面。记得把这个文件的里面的全部东西复制一下 然后我们在项目最外面新建一个文件_config-theme.yml，名字随便取，自己能知道就行。把刚刚复制的东西全部粘贴到里面。然后将这么多东西push到刚刚新建的仓库就行了。 截图中除了package-lock.json,yarn.lock不是必须的，其他的都是必须的哦。。 .gitignore文件中记得加上这个themes/防止将主题推送上去，可以先运行git rm --cached .清除缓存 换个电脑吧好了，我们要换个电脑安装了。 打开你的另一台电脑（默认你的电脑装完了node.js ,git, hexo( 运行npm install hexo-cli -g) ） 打开你的github，找到你hexo项目，并复制你的项目地址 假设 git@github.com:SunnyDesmond/sunnyDesmond.github.io.git cd到你需要安装博客的文件夹，执行git clone git@github.com:SunnyDesmond/sunnyDesmond.github.io.git⚠️注意：一定要确保你的新的电脑的ssh key 已经加到你的github中哦～不会的话，可以百度，也可以看看这篇文章 balabala..开始下载。。嘟。。下载成功。。😄 喝口水。。。继续。。 cd到你的项目，执行npm install …嘟。。。安装成功 😄 执行git clone https://github.com/iissnan/hexo-theme-next themes/next 我这边用的next主题。。。如果不是这个主题的话，不好意思，你可能要看一下其他主题的配置文件了 将_config-theme.yml（也就是刚刚说新建的文件config文件）里面的内容全部赋值 粘贴到themes／主题／下的_config.yml里面 运行 hexo new &quot;xx&quot;, hexo clean,hexo g,hexo s,在浏览器中打开你的localhost:4000如果成功看到页面。。那么恭喜你成功了。。。如果没有，请好好检查一下，然后发布文章hexo d即可(如果是mac的话，记得加上sudo,不然可能出现这种情况 12FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: EACCES: permission denied, unlink '/Users/desmond/work/sunnyDesmond.github.io/.deploy_git/archives/index.html' ) 最后记得每次发布文章之后，将项目push到新的仓库哦～最后感谢知乎大神给出的一些方法建议，如果有需要，小伙伴们可以看一下这个帖子]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue mock小记]]></title>
    <url>%2Fmock%E5%B0%8F%E8%AE%B0.html</url>
    <content type="text"><![CDATA[关于mockjsmockjs真的是一款数据生成神器，可以帮助我们生成一堆我们想要的数据。在前后端分离的工作模式下，前端的苦逼们再也无需等待后台大哥们的接口了。想要数据？自己mock一下就搞定。 用法官网对于mockjs，只是简单介绍了一下它的安装方式，以及引入方式。对于实际在项目中的使用，则直接抛了几个demo，感觉让人很扫兴。最近在一个vue项目中需要用到mock，在网上找了很多文章，感觉都非常专业的样子，然而看完还是一脸懵逼。。不能换个写个简单的，让人看得懂的说话么。。好吧，没办法，只能自己摸索，居然还成功了。。 这边做一个小记，防止自己忘记。。 安装关于安装，mock这个已经写得很详细了。直接cd到你的项目中，运行npm install mockjs --save-dev 回车，然后balabla安装。。如果下载很慢，可以换成淘宝镜像源cnpm install mockjs --save-dev 这个来安装。 使用 首先，在项目中新建一个文件，暂且称为mock.js,我这边是在src/plugins/新建的。你们可以随便新建在哪，建完之后确保你能找得到它。。 然后，把一些配置写进刚刚新建的mock.js,它的api用法我这边就不写，想偷懒？那可不行，自己慢慢看文档去！我这边贴一下我的简单的配置。我这边生成的是一堆外卖数据 1234567891011121314151617181920212223242526272829303132//引入mockjsimport Mock from 'mockjs';const data = Mock.mock(&#123; // 属性 list 的值是一个数组，其中含有 1 到 10 个元素 'foods|10-50': [&#123; 'name': "@ctitle(2,10)", "img": "@image('600x600',#b7ef7c)", "brief": "@csentence(1,50)", "price|0-20.0-2": 1, "num": 0, "minusFlag": true, "time": "@time", "peisongfei|0-100.0-2": 1, "limit|0-50": 1 &#125;], "sales|10-50": [&#123; // 属性 id 是一个自增数，起始值为 1，每次增 1 'name': "@ctitle(2,10)", "img": "@image('600x600',#b7ef7c)", "brief": "@csentence(1,50)", "price|0-100.0-2": 1, "num": 0, "minusFlag": true, "time": "@time", "peisongfei|0-100.0-2": 1, "limit|0-100": 1 &#125;]&#125;);export default &#123; data&#125; 接下来，在你需要用到的mock数据的组件页面中，这样写 1import mockdata from "@/plugins/mock"; 这个路径是你刚刚新建mock.js这个文件的路径，文件后面的.js可以省去。 引用数据，在你methods里面 直接引用刚刚的mockdata即可。例如： 123456new Promise((resolve, reject) =&gt; &#123; that.foods =mockdata.data.foods; //直接点出你生成的假数据对象即可 that.foodsListLen = that.foods.length; &#125;).catch(err=&gt;&#123; console.log(err) &#125;) 搞定，收工！ 最后本人菜鸟一枚，以上完全是自己摸索的结果，如果各位看官觉得写得不好，还请不吝赐教，感谢各位。。。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>mockjs</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序]]></title>
    <url>%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
    <content type="text"><![CDATA[从微信小程序发布以来就一直关注着。也玩了几个小程序的demo，感觉很流畅，用着很舒服。最近趁着有点时间，打算自己写个小程序练练手，会把踩过的一些坑留在这边。。。 小程序小程序用到了和目前很火的前端框架一样的双向数据绑定。它集成很多自己带的api，比如它可以很简单获取用户信息，获取设备信息，指南针等等，感觉很友好。具体的就不描述了，文档上面都有。 事件先吐槽一下文档。它把事件直接归纳到了视图层&gt;WXML里面，但是在api文档中却没有,api真的就是完完全全的api。。害的我在API中找了半天。。还以为小程序没有官方指定的绑定事件呢。(好吧，是我太年轻了。) 言归正传。。小程序自带了一个叫做bindtap( tap的t是小写~),然后跟上你需要绑定的事件名称即可。如官方例子： 1234567&lt;view bindtap="tapName"&gt; Click me! &lt;/view&gt; Page(&#123; tapName: function(event) &#123; console.log(event) &#125;&#125;) 很简单。。 视图容器 viewview 是小程序中的视图容器，个人感觉类似于html的div吧。在一些情况下会有一些问题。那就是拉动时候貌似有点异常。他的效果类似于ios自带的弹性滑动效果，但是在一些情况下，他的滑动总感觉怪怪的~如图：如果发现是这样的。。那么你需要检查一下你的项目配置了。找到项目的app.json。然后在window对象中找到 enablePullDownRefresh把它设置成fasle，或者直接删除就行了。。。]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[放大镜插件]]></title>
    <url>%2F%E6%94%BE%E5%A4%A7%E9%95%9C%E6%8F%92%E4%BB%B6.html</url>
    <content type="text"><![CDATA[需求电商网站上最常见，最常用的插件莫过于放大镜特效了。为了避免重复造轮子，我这边整理了一个蛮好用的jquery放大镜插件。开箱即用，很便捷。 插件核心代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115//**************************************************************// jQZoom allows you to realize a small magnifier window,close// to the image or images on your web page easily.//// jqZoom version 2.1// Author Doc. Ing. Renzi Marco(www.mind-projects.it)// First Release on Dec 05 2007// i'm searching for a job,pick me up!!!// mail: renzi.mrc@gmail.com//**************************************************************(function($) &#123; $.fn.jqueryzoom = function(options) &#123; var settings = &#123; xzoom: 200, //zoomed width default width yzoom: 200, //zoomed div default width offset: 10, //zoomed div default offset position: "right", //zoomed div default position,offset position is to the right of the image lens: 1, //zooming lens over the image,by default is 1; preload: 1 &#125;; if (options) &#123; $.extend(settings, options); &#125; var noalt = ''; $(this).hover(function() &#123; var imageLeft = this.offsetLeft; var imageRight = this.offsetRight; var imageTop = $(this).get(0).offsetTop; var imageWidth = $(this).children('img').get(0).offsetWidth; var imageHeight = $(this).children('img').get(0).offsetHeight; noalt = $(this).children("img").attr("alt"); var bigimage = $(this).children("img").attr("jqimg"); $(this).children("img").attr("alt", ''); if ($("div.zoomdiv").get().length == 0) &#123; $(this).after("&lt;div class='zoomdiv'&gt;&lt;img class='bigimg' src='" + bigimage + "'/&gt;&lt;/div&gt;"); $(this).append("&lt;div class='jqZoomPup'&gt;&amp;nbsp;&lt;/div&gt;"); &#125; if (settings.position == "right") &#123; if (imageLeft + imageWidth + settings.offset + settings.xzoom &gt; screen.width) &#123; leftpos = imageLeft - settings.offset - settings.xzoom; &#125; else &#123; leftpos = imageLeft + imageWidth + settings.offset; &#125; &#125; else &#123; leftpos = imageLeft - settings.xzoom - settings.offset; if (leftpos &lt; 0) &#123; leftpos = imageLeft + imageWidth + settings.offset; &#125; &#125; $("div.zoomdiv").css(&#123; top: imageTop, left: leftpos &#125;); $("div.zoomdiv").width(settings.xzoom); $("div.zoomdiv").height(settings.yzoom); $("div.zoomdiv").show(); if (!settings.lens) &#123; $(this).css('cursor', 'crosshair'); &#125; $(document.body).mousemove(function(e) &#123; mouse = new MouseEvent(e); /*$("div.jqZoomPup").hide();*/ var bigwidth = $(".bigimg").get(0).offsetWidth; var bigheight = $(".bigimg").get(0).offsetHeight; var scaley = 'x'; var scalex = 'y'; if (isNaN(scalex) | isNaN(scaley)) &#123; var scalex = (bigwidth / imageWidth); var scaley = (bigheight / imageHeight); $("div.jqZoomPup").width((settings.xzoom) / scalex); $("div.jqZoomPup").height((settings.yzoom) / scaley); if (settings.lens) &#123; $("div.jqZoomPup").css('visibility', 'visible'); &#125; &#125; xpos = mouse.x - $("div.jqZoomPup").width() / 2 - imageLeft; ypos = mouse.y - $("div.jqZoomPup").height() / 2 - imageTop; if (settings.lens) &#123; xpos = (mouse.x - $("div.jqZoomPup").width() / 2 &lt; imageLeft) ? 0 : (mouse.x + $("div.jqZoomPup").width() / 2 &gt; imageWidth + imageLeft) ? (imageWidth - $("div.jqZoomPup").width() - 2) : xpos; ypos = (mouse.y - $("div.jqZoomPup").height() / 2 &lt; imageTop) ? 0 : (mouse.y + $("div.jqZoomPup").height() / 2 &gt; imageHeight + imageTop) ? (imageHeight - $("div.jqZoomPup").height() - 2) : ypos; &#125; if (settings.lens) &#123; $("div.jqZoomPup").css(&#123; top: ypos, left: xpos &#125;); &#125; scrolly = ypos; $("div.zoomdiv").get(0).scrollTop = scrolly * scaley; scrollx = xpos; $("div.zoomdiv").get(0).scrollLeft = (scrollx) * scalex; &#125;); &#125;, function() &#123; $(this).children("img").attr("alt", noalt); $(document.body).unbind("mousemove"); if (settings.lens) &#123; $("div.jqZoomPup").remove(); &#125; $("div.zoomdiv").remove(); &#125;); count = 0; if (settings.preload) &#123; $('body').append("&lt;div style='display:none;' class='jqPreload" + count + "'&gt;sdsdssdsd&lt;/div&gt;"); $(this).each(function() &#123; var imagetopreload = $(this).children("img").attr("jqimg"); var content = jQuery('div.jqPreload' + count + '').html(); jQuery('div.jqPreload' + count + '').html(content + '&lt;img src=\"' + imagetopreload + '\"&gt;'); &#125;); &#125; &#125;&#125;)(jQuery);function MouseEvent(e) &#123; this.x = e.pageX this.y = e.pageY&#125; github地址如果你想获得完整的项目，方便查看demo，可以点击这个试试：点我查看demops：(本来想放到github上的，但是不知道为什么，始终推不上去，也拉不下来。。只能换成上传到码云了)输入git clone https://git.oschina.net/sunny_des/jq-zoom.git 或者直接点下载压缩包到本地即可体验。 说明由于插件是网上寻找而来，部分作者署名已经经过修改删除，如有作者发现侵权，麻烦联系一下我，手动删除，感谢~]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一份简单的gulpfile 配置文件]]></title>
    <url>%2F%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8D%95%E7%9A%84gulpfile-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html</url>
    <content type="text"><![CDATA[gulpgulp在前端开发中，是一把利器，可以帮我们完成一堆重复繁琐的工作，解放双手，提高生产力。 文件目录12345678├─html├─img├─js├─lib│ ├─css│ ├─fonts│ └─js└─sass 配置文件这边把一份自己的常用的配置文件，贴出来。未来有新需求的话，再来更新文件。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107var gulp = require('gulp'), uglify = require('gulp-uglify'), rename = require('gulp-rename'), sass = require('gulp-sass'), minifyCss = require('gulp-clean-css'), livereload = require('gulp-livereload'), postcss = require('gulp-postcss'), autoprefixer = require('autoprefixer'), concat = require('gulp-concat'), fileinclude = require('gulp-file-include'), del = require('del');// 默认路径var paths = &#123; src: 'src/', dist: 'dist/'&#125;// 清空distgulp.task('clean', function(cb) &#123; return del([paths.dist + "**/*"], cb);&#125;);// 压缩jsgulp.task('uglifyRename', function() &#123; gulp.src(paths.src + 'js/*.js') .pipe(concat("all.js")) .pipe(uglify()) //压缩 .pipe(rename(&#123; suffix: '.min' &#125;)) .pipe(gulp.dest(paths.dist + 'js')) .pipe(livereload());&#125;);//编译sass并且压缩gulp.task('sass2css', function() &#123; //postcss plugin var plugins = [ autoprefixer(&#123; browsers: ['last 3 version'], cascade: false &#125;) ]; gulp.src(paths.src + 'sass/*.scss') .pipe(sass()) .pipe(concat("all.css")) .pipe(gulp.dest(paths.dist + 'css')) //输出原文件 .pipe(postcss(plugins)) //带上厂商前缀，对相关css做兼容处理 .pipe(minifyCss()) .pipe(rename(&#123; suffix: '.min' &#125;)) .pipe(gulp.dest(paths.dist + 'css')) .pipe(livereload());&#125;);//copy html 文件gulp.task('copyHtml', function() &#123; gulp.src(paths.src + 'html/*.html') .pipe(fileinclude(&#123; prefix: '@@', basepath: '@file' &#125;)) .pipe(gulp.dest(paths.dist + 'html')) .pipe(livereload());&#125;);//copy img 文件gulp.task('copyImg', function() &#123; gulp.src(paths.src + 'img/*.*') .pipe(gulp.dest(paths.dist + 'img')) .pipe(livereload());&#125;)// copy lib下的所有文件gulp.task('copylib', function() &#123; gulp.src([paths.src + 'lib/*/*.*']) .pipe(gulp.dest(paths.dist + 'lib/')) .pipe(livereload());&#125;)//创建监听任务gulp.task('watch', function() &#123; livereload.listen(); gulp.watch(paths.src + 'js/*.js', ['uglifyRename']); //监听js文件 gulp.watch(paths.src + 'sass/*.scss', ['sass2css']); //监听 css gulp.watch(paths.src + 'html/*.html', ['copyHtml']); //监听html gulp.watch(paths.src + 'img/*.*', ['copyImg']); //监听img gulp.watch(paths.src + 'lib/*/*.*', ['copylib']); //监听img&#125;);gulp.task('build', ['watch', 'copyHtml', 'uglifyRename', 'copyImg', 'copylib', 'sass2css']);gulp.task('default', ['build'], function() &#123; console.log("--------finish all------------")&#125;); package.json顺便贴一下依赖 123456789101112"devDependencies": &#123; "autoprefixer": "^7.1.1", "gulp": "^3.9.1", "gulp-clean-css": "^3.3.1", "gulp-concat": "^2.6.1", "gulp-livereload": "^3.8.1", "gulp-postcss": "^7.0.0", "gulp-rename": "^1.2.2", "gulp-sass": "^3.1.0", "gulp-uglify": "^2.1.2", "del": "^3.0.0" &#125;, ##一些更新实际开发中我们可能会需要区分开发环境，然后就有了这份更新的gulpfile。由于文件太多了我上传到github gulp-template上了。 ##webpack最近有折腾了一个webpack多页面配置，也上传到了github webpack_multi_page_template]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>gulp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css 美化radio]]></title>
    <url>%2Fcss-%E7%BE%8E%E5%8C%96radio.html</url>
    <content type="text"><![CDATA[需求使用css 美化 input type=”radio”如图： 代码1&lt;input class="radio-beauty" type="radio" id="radio1" name="carriageType" /&gt; 12345678910111213141516171819 .radio-beauty &#123; width: 12px; height: 12px; appearance: none; border: 1px solid #7a7a7a; border-radius: 50%; position: relative; &#125; .radio-beauty:checked:after &#123; content: &quot;&quot;; position: absolute; width: 8px; height: 8px; top: 1px; left: 1px; background-color: #262626; border-radius: 50%; &#125; 结束语利用伪类可以很方便的改造一些我们需要的css效果，不必要添加新的标签了。]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[购房杂记]]></title>
    <url>%2F%E8%B4%AD%E6%88%BF%E6%9D%82%E8%AE%B0.html</url>
    <content type="text"><![CDATA[一些感悟以前不管写blog也好，建站也好，围绕的主题，总是和开发技术相关。那时候总是想做出一些东西放在网上，与一些志同道合的人分享。然而，忽然发现seo这个问题，真的是痛点。如果不花费一些功夫去打理，根本不会有人能从搜索引擎的关键字跳转到你的页面上。曾今是为了分享而分享，现在想来倒是有点本末倒置了。以后的博客，将会做为类似的一些公开日志，将不局限于技术题材，会写一些生活有关的东西。想到啥就写啥，给未来留下一些美好的回忆。也不会刻意去做一些seo优化了，又不是赢利性的网站，没必要。 回到主题在南京购房的欲望萌生于2017年初。然后一番紧锣密鼓的比较房价，实地看盘，认购，签约，终于在5月初的时候完成了人生中的一件大事。购房全程是和老婆一起完成，户型，楼层，采光都是经过我们商量得出的结果，双方家里的大人未参与，感觉很不错。现在就是要说银行贷款这件事。从5月份提交资料审核，一直到今天还没有放款，中途可谓是一波三折。5月提交资料的时候，仔细询问了交行贷款政策。那时说是在基准利率的基础上95折。当时觉得还行，直接就签了交行了。满心欢喜，只等放贷还款了。左等右等，时间来到了7月下旬。距离正常放贷过去了两个月，我们开始有点慌了。因为那时候小道消息传的沸沸扬扬，说是各大银行都要取消打折优惠，还要提交基准利率。那时那个慌，立马给交行签约人打电话，balabala一堆后，交行人员否认了一部分网传消息，但也默认了取消折扣。为了防止出现提高基准利率，我们无奈撤销了原来提交的文件，修改折扣，重新提交审核，重新在等，暗暗劝自己，没有折扣总比提交基准好。。时间又转到了8月中旬，银行的签约人给了我们一个好消息，说是在4、5月提交的申请，还是有希望能拿到优惠的，之后的就不能再享有该优惠。当时听到那消息，真感觉捡了钱，捡了天大的便宜一样，开心的要飞起来。。然后同意再次修改提交文件，再等。。。今天，老婆（辛苦了）请了一个假，再次跑去了银行补写资料了。。。但愿事情能早点结束，早日放款。。。 最后（…我会把未来的事情放到这边，结束这篇文章。预留一个坑。–update–2017年8月18日13:19:36 好吧，没想到这么快，看来还是比较靠谱的，从修改到下款花了两天时间。今天上午11点左右的时候，通知下款了，纠结的心，终于可以放下了。接下来就是考虑如何努力工作，养家糊口了。。。）我只想说，做为一个p民，真的太不容易了。随随便便一个政策，就能让我们左右摇摆不定。生活不易，且行且珍惜。]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[顺滑tab]]></title>
    <url>%2F%E9%A1%BA%E6%BB%91tab.html</url>
    <content type="text"><![CDATA[swiperswiper这个插件在日常开发中使用的频率非常高，他做出的轮播图，高效，易扩展。通过改装swiper，可以实现很多H5特效。 tabtab也是日常开发中常见的功能之一，一些简单的tab我们都会自己手写。但写出来的tab切换非常生硬，为了美观好看，我们可以加上一些过度动画，进行平滑的切换。就像这样： 结合现在可以利用swiper的强大功能，来改造一下我们的tab，来实现如图功能。首先自然是把swiper引入到页面。 123456789101112131415&lt;!--列表切换选项卡--&gt;&lt;div class="maple-tab clearFix"&gt; &lt;ul&gt; &lt;li class="active"&gt;&lt;p class="m-border-right"&gt;订单状态&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;订单详情&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!--列表内容--&gt;&lt;div class="swiper-container"&gt; &lt;div class="swiper-wrapper"&gt; &lt;div class="swiper-slide tab-content-1"&gt;列表1内容&lt;/div&gt; &lt;div class="swiper-slide tab-content-2"&gt;列表2内容&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 12345678910111213141516$(function () &#123; var mySwiper = new Swiper('.swiper-container', &#123; onSlideChangeEnd: function (swiper) &#123; var j=mySwiper.activeIndex; $('.maple-tab li, .maple-tab2 li').removeClass('active').eq(j).addClass('active'); &#125; &#125;) /*列表切换*/ $('.maple-tab li, .maple-tab2 li').on('click', function (e) &#123; e.preventDefault(); //得到当前索引 var i=$(this).index(); $('.maple-tab li, .maple-tab2 li').removeClass('active').eq(i).addClass('active'); mySwiper.slideTo(i,1000,false); &#125;); &#125;); 改造完成。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用css3实现箭头]]></title>
    <url>%2F%E5%88%A9%E7%94%A8css3%E5%AE%9E%E7%8E%B0%E7%AE%AD%E5%A4%B4.html</url>
    <content type="text"><![CDATA[需求在一些开发中，经常会用到一些箭头，如图所示：要实现图上的抢这个箭头，传统的做法就是切一张这样的图片，然后最为背景图就行了。但考虑到节约图片加载资源以及css3的强大特性，我们完全可以用CSS3来实现如图需求。 实现关于如何用css3实现三角形、箭头的方法有很多，百度一下你就知道。这边的话，可以把上图看成两部分，一部分是三角形，一部分是矩形就行了。具体实现的代码是这样的。 123&lt;div class="info-r"&gt; &lt;span class="btn"&gt;抢&lt;/span&gt;&lt;/div&gt; 12345678910111213141516171819202122.info-r &#123; float: right; .btn &#123; width: 56px; font-size: 32px; color: #ff4400; line-height: 62px; background-color: #ffec68; display: block; text-align: center; position: relative; &amp;:before &#123; border: 31px solid transparent; border-right: 10px solid #ffec68; width: 0; height: 0; left: -41px; position: absolute; content: ' ' &#125; &#125; &#125; 这样就可以了。 延伸利用这种方法我们可以实现三角形，但如果我们要实现诸如&gt;、&lt;这种箭头怎么办呢。其实也很好实现。我们只要设置两个大小不一的三角形，然后将三角形层叠，小的三角形盖住大的三角形的中间区域，然后只展示大的三角形的外边框，就可以实现了。具体实现： 1&lt;div id="demo"&gt;&lt;/div&gt; 12345678910111213141516171819202122232425262728#demo &#123; width: 100px; height: 100px; background-color: #ccc; position: relative; border: 4px solid #333;&#125;#demo:after, #demo:before &#123; border: solid transparent; content: ' '; height: 0; left: 100%; position: absolute; width: 0;&#125;#demo:after &#123; border-width: 9px; border-left-color: #ccc; top: 15px;&#125;#demo:before &#123; border-width: 14px; border-left-color: #333; top: 10px;&#125; 具体可以参考这篇文章：Css arrows and shapes without markup]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vscode中使用tab emmet展开失效]]></title>
    <url>%2Fvscode%E4%B8%AD%E4%BD%BF%E7%94%A8tab-emmet%E5%B1%95%E5%BC%80%E5%A4%B1%E6%95%88.html</url>
    <content type="text"><![CDATA[问题用过vscode的同学都知道，这个文本编辑器异常强大。它提供了很多常用的插件，免除了在sublime中安装一堆插件的烦恼。尤其它自带的emmet，那是相当顺手。但是如果装了多了插件的话，有可能会把自带的emmet快捷键给冲突。造成tab形如ul&gt;li+span不能生成&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;span&gt;&lt;/span&gt;&lt;/ul&gt;这种尴尬的问题。 解决其实问题也是很好解决，只要按ctrl+p呼出控制器，然后输入keybindings.json按回车。它自动会跳转到keybindings.json页面，然后新增 12345&#123; "key": "tab", "command": "-acceptSelectedSuggestion", "when": "config.emmet.triggerExpansionOnTab &amp;&amp; editorTextFocus &amp;&amp; !editorHasMultipleSelections &amp;&amp; !editorHasSelection &amp;&amp; !editorReadonly &amp;&amp; !editorTabMovesFocus"&#125; 就可以解决如上问题。P.S(如果已经存在tab，那就直接把command和when替换即可)。 如果想要键入ul&gt;li+span，让它后面自带提示的话，也非常简单，只要把 12345&#123; "key": "tab", "command": "editor.emmet.action.expandAbbreviation", "when": "config.emmet.triggerExpansionOnTab &amp;&amp; editorTextFocus &amp;&amp; !editorHasMultipleSelections &amp;&amp; !editorHasSelection &amp;&amp; !editorReadonly &amp;&amp; !editorTabMovesFocus" &#125; 这个替换就行了。]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于JQ的平滑滚动到顶部插件]]></title>
    <url>%2F%E5%9F%BA%E4%BA%8EJQ%E7%9A%84%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8%E5%88%B0%E9%A1%B6%E9%83%A8%E6%8F%92%E4%BB%B6.html</url>
    <content type="text"><![CDATA[需求页面过长的时候，滑到底部之后要想再翻到网站的顶部查看内容，如果单纯依靠手指划显然不太友好。这时点击回到顶部的功能就显得非常人性化。 实现利用如下这段js，我们可以轻松的做到这一点。 123456789101112131415161718192021222324252627282930313233$.fn.scrollTo = function(options) &#123; var defaults = &#123; toT: 0, //滚动目标位置 durTime: 500, //过渡动画时间 delay: 30, //定时器时间 callback: null //回调函数 &#125;; var opts = $.extend(defaults, options), timer = null, _this = this, curTop = _this.scrollTop(), //滚动条当前的位置 subTop = opts.toT - curTop, //滚动条目标位置和当前位置的差值 index = 0, dur = Math.round(opts.durTime / opts.delay), smoothScroll = function(t) &#123; index++; var per = Math.round(subTop / dur); if (index &gt;= dur) &#123; _this.scrollTop(t); window.clearInterval(timer); if (opts.callback &amp;&amp; typeof opts.callback == 'function') &#123; opts.callback(); &#125; return; &#125; else &#123; _this.scrollTop(curTop + index * per); &#125; &#125;; timer = window.setInterval(function() &#123; smoothScroll(opts.toT); &#125;, opts.delay); return _this; &#125;; 最后我们只要给某一个按钮的点击事件里加上这个$(&quot;body&quot;).scrollTo({ toT: 0 });就ok了。]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[textarea高度自适应自动展开]]></title>
    <url>%2FTEXTAREA%E9%AB%98%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94%E8%87%AA%E5%8A%A8%E5%B1%95%E5%BC%80.html</url>
    <content type="text"><![CDATA[需求web开发中，使用textarea的场景非常常见。但是原生的textarea不能根据用户输入的内容来伸缩自己的高度，这个特性感觉很反人类，在一些特定下我们希望它的高度能随着内容自适应，而不出现滚动条。就像下面的图一样。 demo图 实现代码 html 1&lt;textarea id="textarea"&gt;&lt;/textarea&gt; js 123456789101112131415161718192021222324252627282930313233343536 // textarea 自适应高度 function makeExpandingArea(el) &#123; var setStyle = function(el) &#123; el.style.height = 'auto'; el.style.height = el.scrollHeight + 'px'; // console.log(el.scrollHeight); &#125; var delayedResize = function(el) &#123; window.setTimeout(function() &#123; setStyle(el) &#125;, 0); &#125; if (el.addEventListener) &#123; el.addEventListener('input', function() &#123; setStyle(el) &#125;, false); setStyle(el) &#125; else if (el.attachEvent) &#123; el.attachEvent('onpropertychange', function() &#123; setStyle(el) &#125;); setStyle(el) &#125; if (window.VBArray &amp;&amp; window.addEventListener) &#123; //IE9 el.attachEvent("onkeydown", function() &#123; var key = window.event.keyCode; if (key == 8 || key == 46) delayedResize(el); &#125;); el.attachEvent("oncut", function() &#123; delayedResize(el); &#125;); //处理粘贴 &#125; &#125; makeExpandingArea(textarea); 兼容性这个问题目前发现在安卓机上，有时候会这个方法会不走，（我这边页面用在混合app开发上），为了解决这个问题，这边还有一个稍微次一点的方法，这边也贴出来，提供给有需要的同学 1&lt;textarea oninput="autosize(this)"&gt;&lt;/textarea&gt; 12345678910 // 自动展开textareafunction autosize(obj) &#123; var el = obj; setTimeout(function() &#123; el.style.cssText = 'height:auto; padding:0'; // for box-sizing other than "content-box" use: // el.style.cssText = '-moz-box-sizing:content-box'; el.style.cssText = 'height:' + el.scrollHeight + 'px'; &#125;, 0);&#125; 使用这个方法，textarea会根据内容的增加减少而变化，但如果先输入文字然后再删除的话，textarea不会完全恢复到原来的高度。。。算是一点点的小遗憾，但是兼容性不错。 简洁的一种写法这边还有一个最简洁的写法，但是bug也是最多的.最致命的是,可以跟随页面内容增加而调整textarea的高度，但不会随着内容的减少而减小高度。o(╯□╰)o这边也放出代码：（不推荐） 1&lt;textarea onpropertychange="this.style.height=this.scrollHeight + 'px'" oninput="this.style.height=this.scrollHeight + 'px'"&gt;&lt;/textarea&gt; 一些黑科技当然了，网上的大神们，为了实现这种效果也是操碎了心，还有很多黑科技写法，诸如在div上加contenteditable=&quot;true&quot;来假冒texta,都是可以的，按需使用即可。附上张鑫旭大神的这篇文章： div模拟textarea文本域轻松实现高度自适应]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用FileReader实现图片上传预览]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8FileReader%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E9%A2%84%E8%A7%88.html</url>
    <content type="text"><![CDATA[需求web开发中经常会出现需要点击按钮然后上传图片这样的功能。一般我们会用第三方插件来实现。但其实如果需求不是很复杂的话，我们使用H5的FileReader就可以满足开发需求。 效果图 代码实现 html1234567&lt;div class="works-wrap"&gt; &lt;div class="figure-box" id="figure_box"&gt;&lt;/div&gt; &lt;div class="add-btn"&gt; &lt;input type="file" id="imgUploadBtn" /&gt; &lt;a href="javascript:void(0);"&gt;&lt;i&gt;&lt;/i&gt;添加作品&lt;/a&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 啰嗦一下 我这边用css将input[type=file] 设置成了opticy:0; 这样可以看起来更像原生的上传。 js12345678910111213141516171819202122232425262728293031var addWork = &#123; add: function(btn, figure_box) &#123; var figureBox = document.getElementById(figure_box); //获取显示图片的div元素 var input = document.getElementById(btn); //获取选择图片的input元素 //这边是判断本浏览器是否支持这个API。 if (typeof FileReader === 'undefined') &#123; alert("浏览器版本过低，请先更新您的浏览器~"); input.setAttribute('disabled', 'disabled'); &#125; else &#123; input.addEventListener('change', readFile, false); //如果支持就监听改变事件，一旦改变了就运行readFile函数。 &#125; function readFile() &#123; var file = this.files[0]; //获取file对象 //判断file的类型是不是图片类型。 if (!/image\/\w+/.test(file.type)) &#123; alert("请上传一张图片~"); return false; &#125; var reader = new FileReader(); //声明一个FileReader实例 reader.readAsDataURL(file); //调用readAsDataURL方法来读取选中的图像文件 //最后在onload事件中，获取到成功读取的文件内容，并以插入一个img节点的方式显示选中的图片 reader.onload = function(e) &#123; // 创建一个新增的图片和文字input var figure = $('&lt;div class="figure"&gt;&lt;div class="figure-hd"&gt;我的头部&lt;/div&gt;&lt;div class="figure-bd"&gt;&lt;img src="' + this.result + '" /&gt;&lt;textarea placeholder="请输入文字"&gt;&lt;/textarea&gt;&lt;/div&gt;&lt;/div&gt;'); figure.appendTo(figureBox); &#125; &#125; &#125; &#125;]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阻止页面滚动误触链接]]></title>
    <url>%2F%E9%98%BB%E6%AD%A2%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E8%AF%AF%E8%A7%A6%E9%93%BE%E6%8E%A5.html</url>
    <content type="text"><![CDATA[问题描述最近在项目中遇到一个非常奇怪的问题，拿出来和大家分享一下。由于文采不好，原因又和这篇文章上描述的差不多，我这边就不组织语言了。直接copy过来了。原文地址 问题1、 在移动设备上快速滚动屏幕然后点击使滚动停止，如何尽量避免在点击时误触a标签，跳转到其他页？ 问题2、这也是在移动端的前端开发中实际遇到的一个问题，详细说来就是在正常情况下，当我们的当前页面内容较多，高度上较高，出现滚动条的时候，当我们用手滑动屏幕，屏幕上页面内容会快速滚动，不会因为手已经离开了屏幕而滚动停止。这个时候，当我们想要停止滚动的时候，我们也轻轻点击屏幕，让屏幕停止。但是这个时候有个问题，如果屏幕上点击的位置，正好有一个a标签，或者有一个button，这个时候就很容易进入下一个路由。查看了mdn上的关于scroll事件的一些说明，并没有对scroll过程中的速度和停止的反应时间这方面的说明。 解决办法找了好多文章没有具体的解决方案，后来在一篇文章的启发下，解决了这个问题。贴下代码： 123456789101112131415161718192021$(function() &#123; //处理 滑动超长list的时候 click页面强行停止页面 可能会触发页面上的a链接 var count = 0, timer = null; var oldTop = newTop = $(window).scrollTop(); function log() &#123; if (timer) clearTimeout(timer); newTop = $(window).scrollTop(); console.log(++count, oldTop, newTop); if (newTop === oldTop) &#123;//页面停止做的操作 $("a").removeAttr("onclick"); clearTimeout(timer); &#125; else &#123; oldTop = newTop; timer = setTimeout(log, 100); $("a").attr("onclick", "return false"); //页面还在滚动中的操作 &#125; &#125; $(window).on('touchmove', log); &#125;); 实现原理原理就是，判断滚动的页面是否还在滚动中，如果滚动那就将点击元素return false禁止点击。反之放开点击操作。我这边好多页面路由跳转用的是a 的href，所以我这么写。大家如果可以用的话，也可以改成其他的标签。截图： 可以看到滚动中的页面 a标签上会有 禁止点击事件的操作。页面停止后，则删除这个禁止操作。 demo图]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css3实现switch button]]></title>
    <url>%2Fcss3%E5%AE%9E%E7%8E%B0switch-button.html</url>
    <content type="text"><![CDATA[需求switch button 在移动端上非常常见。如图： css3 实现现在我们用css3 来实现这个button。 123&lt;div class="button-wrap"&gt; &lt;input type="checkbox"&gt; &lt;/div&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364.button-wrap &#123; color: #999; &#125; .button-wrap input &#123; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); -webkit-appearance: none; position: relative; width: 52px; height: 32px; border: 1px solid #dfdfdf; outline: 0; border-radius: 16px; box-sizing: border-box; background-color: #dfdfdf; -webkit-transition: background-color .1s, border .1s; transition: background-color .1s, border .1s; &#125; .button-wrap input:before &#123; content: " "; position: absolute; top: 0; left: 0; width: 50px; height: 30px; border-radius: 15px; background-color: #fdfdfd; -webkit-transition: -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); transition: -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); transition: transform .35s cubic-bezier(.45, 1, .4, 1); transition: transform .35s cubic-bezier(.45, 1, .4, 1), -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); &#125; .button-wrap input:after &#123; content: " "; position: absolute; top: 0; left: 0; width: 30px; height: 30px; border-radius: 15px; background-color: #fff; box-shadow: 0 1px 3px rgba(0, 0, 0, .4); -webkit-transition: -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: transform .35s cubic-bezier(.4, .4, .25, 1.35), -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); &#125; .button-wrap input:checked &#123; border-color: #04be02; background-color: #04be02; &#125; .button-wrap input:checked:before &#123; -webkit-transform: scale(0); transform: scale(0); &#125; .button-wrap input:checked:after &#123; -webkit-transform: translateX(20px); transform: translateX(20px); &#125; 这种比较简洁，非常适合在移动端中使用。但是在pc上的话，我发现在chrome浏览器上是ok的。（ps：chrome真的是太流弊了~）在火狐上的话直接GG。IE 9也是可以的，只不过没有缓动动画。IE10正常，IE11貌似不行？？？？没细究。那接下来还有一种版本，兼容型不错。ie未测，FF还不错。 123456&lt;div class="button-wrap-ff"&gt; &lt;label for="switchCP" class="switchCP"&gt; &lt;input type="checkbox" id="switchCP" checked="checked" class="switchCP-input"&gt; &lt;div class="switchCP-box"&gt;&lt;/div&gt; &lt;/label&gt; &lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677.button-wrap-ff &#123; color: #999; &#125; .switchCP &#123; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); &#125; .switchCP&gt;* &#123; pointer-events: none; &#125; .switchCP-input &#123; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); position: absolute; left: -9999px; &#125; .switchCP-input:checked~.switchCP-box &#123; border-color: #04be02; background-color: #04be02; &#125; .switchCP-input:checked~.switchCP-box:before &#123; -webkit-transform: scale(0); transform: scale(0); &#125; .switchCP-input:checked~.switchCP-box:after &#123; -webkit-transform: translateX(20px); transform: translateX(20px); &#125; .switchCP-box &#123; display: block; position: relative; width: 52px; height: 32px; border: 1px solid #dfdfdf; outline: 0; border-radius: 16px; box-sizing: border-box; background-color: #dfdfdf; -webkit-transition: background-color .1s, border .1s; transition: background-color .1s, border .1s; &#125; .switchCP-box:before &#123; content: " "; position: absolute; top: 0; left: 0; width: 50px; height: 30px; border-radius: 15px; background-color: #fdfdfd; -webkit-transition: -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); transition: -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); transition: transform .35s cubic-bezier(.45, 1, .4, 1); transition: transform .35s cubic-bezier(.45, 1, .4, 1), -webkit-transform .35s cubic-bezier(.45, 1, .4, 1); &#125; .switchCP-box:after &#123; content: " "; position: absolute; top: 0; left: 0; width: 30px; height: 30px; border-radius: 15px; background-color: #fff; box-shadow: 0 1px 3px rgba(0, 0, 0, .4); -webkit-transition: -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: transform .35s cubic-bezier(.4, .4, .25, 1.35); transition: transform .35s cubic-bezier(.4, .4, .25, 1.35), -webkit-transform .35s cubic-bezier(.4, .4, .25, 1.35); &#125; ok，大功告成~]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开篇]]></title>
    <url>%2Fstart.html</url>
    <content type="text"><![CDATA[一些废话恩，动手写个纯文字的博客还真是感觉挺麻烦的。毕竟我是一个懒人。首先标题取名字就让我很纠结。想了很久，感觉还是叫开篇比较好。毕竟本文就是写一些啰里啰嗦的流水文。而且是第一次用markdown书写，叫开篇自我感觉没毛病 &lt;(￣3￣)&gt; 。 一些过程博客的概念很早就知道了，但真正入坑还得从2015年说起。那时候查资料的时候总是能跳转到各种大牛的博客文章上去。而从这些文章中，也总能获取相关的知识，找到相关的问题的答案。感觉博客就是给人答题解难，自我提升的。羡慕之情，溢于言表。于是在工作不忙的时候，开始着手建立自己的博客。最开始接触的，自然是csdn。感觉各种方便。于是注册，建号，sunny_desmond,开始写一些自己在工作的中遇到的问题，感悟，感觉挺好。我是一个喜欢折腾的人。又在偶然机会看到可以搭建个人网站建立属于自己的博客。这想想就很酷啊。于是各种百度，google。然后注册域名，购买虚拟主机，备案。一顿操作后，我自己的博客终于诞生了。但由于新手，对建站知识很模糊，一开始买了一个windows系统的虚拟主机。然后发现只能跑.net的博客程序。。。没办法，谁让我买了一年的主机呢。然后用z-blog .net版搭建了第一个博客。resping。别问我域名为什么取这个名字，或者说这个域名有什么含义，因为我也不知道。。。49一年的主机真的是谁用谁知道。由于是windows系统且不支持php,我甚至不能搭建wordpress。然后终于在去年，把主机升级成了299一年的windows主机，她支持asp.net 和 php，于是，顺理成章的，博客从z-bolg换成了wp。接下来，使用wp跑了有大半年，中间没有出现问题。就在十几天前，老毛病又开始犯了。我觉得我的网站响应时间还是太慢了。TTFB很高。这不能忍，于是在一个风和日丽的清晨，我把站点连接到了七牛云存储。。然后各种坑，各种被镜像，各种无解。一怒之下，清空了数据库。。然后转投用hexo+github搭建了一个新的博客，新的起点开始了。。。。 一些后话说实话，markdown用起来很舒服，hexo博客用起来也很舒服。以前的博客文章我会慢慢迁移过来。新的随笔都会发布到这里。一直到。。github倒闭，或者出现新的博客系统为止。。。 感谢最后需要感谢一下网上一些大神的分享精神，解决了我很多开发中遇到的难题。当然，还要感谢一下我的老婆，感谢她支持我去折腾这些东西 &lt;(￣3￣)&gt;]]></content>
      <categories>
        <category>生活杂记</category>
      </categories>
      <tags>
        <tag>生活杂记</tag>
      </tags>
  </entry>
</search>
